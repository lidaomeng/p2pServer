/* soapServer.cpp
   Generated by gSOAP 2.8.14 from soap1.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapServer.cpp ver 2.8.14 2016-06-14 07:53:18 GMT")


extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap *soap)
{
#ifndef WITH_FASTCGI
	unsigned int k = soap->max_keep_alive;
#endif
	do
	{
#ifndef WITH_FASTCGI
		if (soap->max_keep_alive > 0 && !--k)
			soap->keep_alive = 0;
#endif
		if (soap_begin_serve(soap))
		{	if (soap->error >= SOAP_STOP)
				continue;
			return soap->error;
		}
		if (soap_serve_request(soap) || (soap->fserveloop && soap->fserveloop(soap)))
		{
#ifdef WITH_FASTCGI
			soap_send_fault(soap);
#else
			return soap_send_fault(soap);
#endif
		}

#ifdef WITH_FASTCGI
		soap_destroy(soap);
		soap_end(soap);
	} while (1);
#else
	} while (soap->keep_alive);
#endif
	return SOAP_OK;
}

#ifndef WITH_NOSERVEREQUEST
extern "C" SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap *soap)
{
	soap_peek_element(soap);
	if (!soap_match_tag(soap, soap->tag, "ns21:transferResult"))
		return soap_serve___ns21__transferResult(soap);
	if (!soap_match_tag(soap, soap->tag, "ns21:TransferResultSecond"))
		return soap_serve___ns21__TransferResultSecond(soap);
	if (!soap_match_tag(soap, soap->tag, "ns21:getSendinfo"))
		return soap_serve___ns21__getSendinfo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns21:dispense"))
		return soap_serve___ns21__dispense(soap);
	if (!soap_match_tag(soap, soap->tag, "ns21:addNode"))
		return soap_serve___ns21__addNode(soap);
	if (!soap_match_tag(soap, soap->tag, "ns21:addSendinfo"))
		return soap_serve___ns21__addSendinfo(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:isPackExist"))
		return soap_serve_ns1__isPackExist(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:transfer"))
		return soap_serve_ns1__transfer(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:cutPackage"))
		return soap_serve_ns1__cutPackage(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getUsableSpace"))
		return soap_serve_ns1__getUsableSpace(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:deletePackage"))
		return soap_serve_ns1__deletePackage(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:getTempPackage"))
		return soap_serve_ns1__getTempPackage(soap);
	if (!soap_match_tag(soap, soap->tag, "ns1:maketo"))
		return soap_serve_ns1__maketo(soap);
	return soap->error = SOAP_NO_METHOD;
}
#endif

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns21__transferResult(struct soap *soap)
{	struct __ns21__transferResult soap_tmp___ns21__transferResult;
	ns21__transferResultResponse ns21__transferResultResponse_;
	ns21__transferResultResponse_.soap_default(soap);
	soap_default___ns21__transferResult(soap, &soap_tmp___ns21__transferResult);
	soap->encodingStyle = NULL;
	if (!soap_get___ns21__transferResult(soap, &soap_tmp___ns21__transferResult, "-ns21:transferResult", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns21__transferResult(soap, soap_tmp___ns21__transferResult.ns21__transferResult_, &ns21__transferResultResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns21__transferResultResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns21__transferResultResponse_.soap_put(soap, "ns21:transferResultResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns21__transferResultResponse_.soap_put(soap, "ns21:transferResultResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns21__TransferResultSecond(struct soap *soap)
{	struct __ns21__TransferResultSecond soap_tmp___ns21__TransferResultSecond;
	ns21__TransferResultSecondResponse ns21__TransferResultSecondResponse_;
	ns21__TransferResultSecondResponse_.soap_default(soap);
	soap_default___ns21__TransferResultSecond(soap, &soap_tmp___ns21__TransferResultSecond);
	soap->encodingStyle = NULL;
	if (!soap_get___ns21__TransferResultSecond(soap, &soap_tmp___ns21__TransferResultSecond, "-ns21:TransferResultSecond", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns21__TransferResultSecond(soap, soap_tmp___ns21__TransferResultSecond.ns21__TransferResultSecond_, &ns21__TransferResultSecondResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns21__TransferResultSecondResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns21__TransferResultSecondResponse_.soap_put(soap, "ns21:TransferResultSecondResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns21__TransferResultSecondResponse_.soap_put(soap, "ns21:TransferResultSecondResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns21__getSendinfo(struct soap *soap)
{	struct __ns21__getSendinfo soap_tmp___ns21__getSendinfo;
	ns21__getSendinfoResponse ns21__getSendinfoResponse_;
	ns21__getSendinfoResponse_.soap_default(soap);
	soap_default___ns21__getSendinfo(soap, &soap_tmp___ns21__getSendinfo);
	soap->encodingStyle = NULL;
	if (!soap_get___ns21__getSendinfo(soap, &soap_tmp___ns21__getSendinfo, "-ns21:getSendinfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns21__getSendinfo(soap, soap_tmp___ns21__getSendinfo.ns21__getSendinfo_, &ns21__getSendinfoResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns21__getSendinfoResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns21__getSendinfoResponse_.soap_put(soap, "ns21:getSendinfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns21__getSendinfoResponse_.soap_put(soap, "ns21:getSendinfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns21__dispense(struct soap *soap)
{	struct __ns21__dispense soap_tmp___ns21__dispense;
	ns21__dispenseResponse ns21__dispenseResponse_;
	ns21__dispenseResponse_.soap_default(soap);
	soap_default___ns21__dispense(soap, &soap_tmp___ns21__dispense);
	soap->encodingStyle = NULL;
	if (!soap_get___ns21__dispense(soap, &soap_tmp___ns21__dispense, "-ns21:dispense", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns21__dispense(soap, soap_tmp___ns21__dispense.ns21__dispense_, &ns21__dispenseResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns21__dispenseResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns21__dispenseResponse_.soap_put(soap, "ns21:dispenseResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns21__dispenseResponse_.soap_put(soap, "ns21:dispenseResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns21__addNode(struct soap *soap)
{	struct __ns21__addNode soap_tmp___ns21__addNode;
	ns21__addNodeResponse ns21__addNodeResponse_;
	ns21__addNodeResponse_.soap_default(soap);
	soap_default___ns21__addNode(soap, &soap_tmp___ns21__addNode);
	soap->encodingStyle = NULL;
	if (!soap_get___ns21__addNode(soap, &soap_tmp___ns21__addNode, "-ns21:addNode", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns21__addNode(soap, soap_tmp___ns21__addNode.ns21__addNode_, &ns21__addNodeResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns21__addNodeResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns21__addNodeResponse_.soap_put(soap, "ns21:addNodeResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns21__addNodeResponse_.soap_put(soap, "ns21:addNodeResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve___ns21__addSendinfo(struct soap *soap)
{	struct __ns21__addSendinfo soap_tmp___ns21__addSendinfo;
	ns21__addSendinfoResponse ns21__addSendinfoResponse_;
	ns21__addSendinfoResponse_.soap_default(soap);
	soap_default___ns21__addSendinfo(soap, &soap_tmp___ns21__addSendinfo);
	soap->encodingStyle = NULL;
	if (!soap_get___ns21__addSendinfo(soap, &soap_tmp___ns21__addSendinfo, "-ns21:addSendinfo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = __ns21__addSendinfo(soap, soap_tmp___ns21__addSendinfo.ns21__addSendinfo_, &ns21__addSendinfoResponse_);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	ns21__addSendinfoResponse_.soap_serialize(soap);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || ns21__addSendinfoResponse_.soap_put(soap, "ns21:addSendinfoResponse", "")
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || ns21__addSendinfoResponse_.soap_put(soap, "ns21:addSendinfoResponse", "")
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__isPackExist(struct soap *soap)
{	struct ns1__isPackExist soap_tmp_ns1__isPackExist;
	struct ns1__isPackExistResponse soap_tmp_ns1__isPackExistResponse;
	soap_default_ns1__isPackExistResponse(soap, &soap_tmp_ns1__isPackExistResponse);
	soap_default_ns1__isPackExist(soap, &soap_tmp_ns1__isPackExist);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__isPackExist(soap, &soap_tmp_ns1__isPackExist, "ns1:isPackExist", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__isPackExist(soap, soap_tmp_ns1__isPackExist.param, soap_tmp_ns1__isPackExistResponse.ret);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__isPackExistResponse(soap, &soap_tmp_ns1__isPackExistResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__isPackExistResponse(soap, &soap_tmp_ns1__isPackExistResponse, "ns1:isPackExistResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__isPackExistResponse(soap, &soap_tmp_ns1__isPackExistResponse, "ns1:isPackExistResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__transfer(struct soap *soap)
{	struct ns1__transfer soap_tmp_ns1__transfer;
	struct ns1__transferResponse soap_tmp_ns1__transferResponse;
	soap_default_ns1__transferResponse(soap, &soap_tmp_ns1__transferResponse);
	soap_default_ns1__transfer(soap, &soap_tmp_ns1__transfer);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__transfer(soap, &soap_tmp_ns1__transfer, "ns1:transfer", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__transfer(soap, soap_tmp_ns1__transfer.param, soap_tmp_ns1__transferResponse.ret);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__transferResponse(soap, &soap_tmp_ns1__transferResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__transferResponse(soap, &soap_tmp_ns1__transferResponse, "ns1:transferResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__transferResponse(soap, &soap_tmp_ns1__transferResponse, "ns1:transferResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__cutPackage(struct soap *soap)
{	struct ns1__cutPackage soap_tmp_ns1__cutPackage;
	struct ns1__cutPackageResponse soap_tmp_ns1__cutPackageResponse;
	soap_default_ns1__cutPackageResponse(soap, &soap_tmp_ns1__cutPackageResponse);
	soap_default_ns1__cutPackage(soap, &soap_tmp_ns1__cutPackage);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__cutPackage(soap, &soap_tmp_ns1__cutPackage, "ns1:cutPackage", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__cutPackage(soap, soap_tmp_ns1__cutPackage.param, soap_tmp_ns1__cutPackageResponse.ret);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__cutPackageResponse(soap, &soap_tmp_ns1__cutPackageResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__cutPackageResponse(soap, &soap_tmp_ns1__cutPackageResponse, "ns1:cutPackageResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__cutPackageResponse(soap, &soap_tmp_ns1__cutPackageResponse, "ns1:cutPackageResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__getUsableSpace(struct soap *soap)
{	struct ns1__getUsableSpace soap_tmp_ns1__getUsableSpace;
	struct ns1__getUsableSpaceResponse soap_tmp_ns1__getUsableSpaceResponse;
	soap_default_ns1__getUsableSpaceResponse(soap, &soap_tmp_ns1__getUsableSpaceResponse);
	soap_default_ns1__getUsableSpace(soap, &soap_tmp_ns1__getUsableSpace);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__getUsableSpace(soap, &soap_tmp_ns1__getUsableSpace, "ns1:getUsableSpace", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__getUsableSpace(soap, soap_tmp_ns1__getUsableSpace.param, soap_tmp_ns1__getUsableSpaceResponse.ret);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__getUsableSpaceResponse(soap, &soap_tmp_ns1__getUsableSpaceResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getUsableSpaceResponse(soap, &soap_tmp_ns1__getUsableSpaceResponse, "ns1:getUsableSpaceResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getUsableSpaceResponse(soap, &soap_tmp_ns1__getUsableSpaceResponse, "ns1:getUsableSpaceResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__deletePackage(struct soap *soap)
{	struct ns1__deletePackage soap_tmp_ns1__deletePackage;
	struct ns1__deletePackageResponse soap_tmp_ns1__deletePackageResponse;
	soap_default_ns1__deletePackageResponse(soap, &soap_tmp_ns1__deletePackageResponse);
	soap_default_ns1__deletePackage(soap, &soap_tmp_ns1__deletePackage);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__deletePackage(soap, &soap_tmp_ns1__deletePackage, "ns1:deletePackage", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__deletePackage(soap, soap_tmp_ns1__deletePackage.param, soap_tmp_ns1__deletePackageResponse.ret);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__deletePackageResponse(soap, &soap_tmp_ns1__deletePackageResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__deletePackageResponse(soap, &soap_tmp_ns1__deletePackageResponse, "ns1:deletePackageResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__deletePackageResponse(soap, &soap_tmp_ns1__deletePackageResponse, "ns1:deletePackageResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__getTempPackage(struct soap *soap)
{	struct ns1__getTempPackage soap_tmp_ns1__getTempPackage;
	struct ns1__getTempPackageResponse soap_tmp_ns1__getTempPackageResponse;
	soap_default_ns1__getTempPackageResponse(soap, &soap_tmp_ns1__getTempPackageResponse);
	soap_default_ns1__getTempPackage(soap, &soap_tmp_ns1__getTempPackage);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__getTempPackage(soap, &soap_tmp_ns1__getTempPackage, "ns1:getTempPackage", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__getTempPackage(soap, soap_tmp_ns1__getTempPackage.param, soap_tmp_ns1__getTempPackageResponse.ret);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__getTempPackageResponse(soap, &soap_tmp_ns1__getTempPackageResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getTempPackageResponse(soap, &soap_tmp_ns1__getTempPackageResponse, "ns1:getTempPackageResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getTempPackageResponse(soap, &soap_tmp_ns1__getTempPackageResponse, "ns1:getTempPackageResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns1__maketo(struct soap *soap)
{	struct ns1__maketo soap_tmp_ns1__maketo;
	struct ns1__maketoResponse soap_tmp_ns1__maketoResponse;
	soap_default_ns1__maketoResponse(soap, &soap_tmp_ns1__maketoResponse);
	soap_default_ns1__maketo(soap, &soap_tmp_ns1__maketo);
	soap->encodingStyle = NULL;
	if (!soap_get_ns1__maketo(soap, &soap_tmp_ns1__maketo, "ns1:maketo", NULL))
		return soap->error;
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap->error;
	soap->error = ns1__maketo(soap, soap_tmp_ns1__maketo.param, soap_tmp_ns1__maketoResponse.ret);
	if (soap->error)
		return soap->error;
	soap_serializeheader(soap);
	soap_serialize_ns1__maketoResponse(soap, &soap_tmp_ns1__maketoResponse);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__maketoResponse(soap, &soap_tmp_ns1__maketoResponse, "ns1:maketoResponse", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	};
	if (soap_end_count(soap)
	 || soap_response(soap, SOAP_OK)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__maketoResponse(soap, &soap_tmp_ns1__maketoResponse, "ns1:maketoResponse", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap->error;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapServer.cpp */
