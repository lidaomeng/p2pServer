/* soapH.h
   Generated by gSOAP 2.8.14 from soap1.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#ifndef soapH_H
#define soapH_H
#include "soapStub.h"
#ifndef WITH_NOIDREF

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_markelement(struct soap*, const void*, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_putindependent(struct soap*);
SOAP_FMAC3 int SOAP_FMAC4 soap_getindependent(struct soap*);
#endif

#ifdef __cplusplus
extern "C" {
#endif
SOAP_FMAC3 void *SOAP_FMAC4 soap_getelement(struct soap*, int*);
SOAP_FMAC3 int SOAP_FMAC4 soap_putelement(struct soap*, const void*, const char*, int, int);

#ifdef __cplusplus
}
#endif
SOAP_FMAC3 int SOAP_FMAC4 soap_ignore_element(struct soap*);

SOAP_FMAC3 const char ** SOAP_FMAC4 soap_faultcode(struct soap *soap);

SOAP_FMAC3 void * SOAP_FMAC4 soap_instantiate(struct soap*, int, const char*, const char*, size_t*);
SOAP_FMAC3 int SOAP_FMAC4 soap_fdelete(struct soap_clist*);
SOAP_FMAC3 void* SOAP_FMAC4 soap_class_id_enter(struct soap*, const char*, void*, int, size_t, const char*, const char*);

SOAP_FMAC3 void* SOAP_FMAC4 soap_container_id_forward(struct soap*, const char*, void*, size_t, int, int, size_t, unsigned int);

SOAP_FMAC3 void SOAP_FMAC4 soap_container_insert(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_byte(struct soap*, char *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_byte(struct soap*, const char*, int, const char *, const char*);
SOAP_FMAC3 char * SOAP_FMAC4 soap_in_byte(struct soap*, const char*, char *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_byte(struct soap*, const char *, const char*, const char*);

#ifndef soap_write_byte
#define soap_write_byte(soap, data) ( soap_begin(soap), soap_serialize_byte(soap, data), soap_begin_send(soap) || soap_put_byte(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char * SOAP_FMAC4 soap_get_byte(struct soap*, char *, const char*, const char*);

#ifndef soap_read_byte
#define soap_read_byte(soap, data) ( soap_begin_recv(soap) || !soap_get_byte(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_int(struct soap*, int *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_int(struct soap*, const char*, int, const int *, const char*);
SOAP_FMAC3 int * SOAP_FMAC4 soap_in_int(struct soap*, const char*, int *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_int(struct soap*, const int *, const char*, const char*);

#ifndef soap_write_int
#define soap_write_int(soap, data) ( soap_begin(soap), soap_serialize_int(soap, data), soap_begin_send(soap) || soap_put_int(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int * SOAP_FMAC4 soap_get_int(struct soap*, int *, const char*, const char*);

#ifndef soap_read_int
#define soap_read_int(soap, data) ( soap_begin_recv(soap) || !soap_get_int(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_bool
#define SOAP_TYPE_bool (26)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_bool(struct soap*, bool *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_bool(struct soap*, const char*, int, const bool *, const char*);

SOAP_FMAC3S const char* SOAP_FMAC4S soap_bool2s(struct soap*, bool);
SOAP_FMAC3 bool * SOAP_FMAC4 soap_in_bool(struct soap*, const char*, bool *, const char*);

SOAP_FMAC3S int SOAP_FMAC4S soap_s2bool(struct soap*, const char*, bool *);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_bool(struct soap*, const bool *, const char*, const char*);

#ifndef soap_write_bool
#define soap_write_bool(soap, data) ( soap_begin(soap), soap_serialize_bool(soap, data), soap_begin_send(soap) || soap_put_bool(soap, data, "boolean", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 bool * SOAP_FMAC4 soap_get_bool(struct soap*, bool *, const char*, const char*);

#ifndef soap_read_bool
#define soap_read_bool(soap, data) ( soap_begin_recv(soap) || !soap_get_bool(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__string
#define SOAP_TYPE_std__string (23)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__string(struct soap*, std::string *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__string(struct soap*, const std::string *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__string(struct soap*, const char*, int, const std::string*, const char*);
SOAP_FMAC3 std::string * SOAP_FMAC4 soap_in_std__string(struct soap*, const char*, std::string*, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_std__string(struct soap*, const std::string *, const char*, const char*);

#ifndef soap_write_std__string
#define soap_write_std__string(soap, data) ( soap_begin(soap), soap_serialize_std__string(soap, data), soap_begin_send(soap) || soap_put_std__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string * SOAP_FMAC4 soap_get_std__string(struct soap*, std::string *, const char*, const char*);

#ifndef soap_read_std__string
#define soap_read_std__string(soap, data) ( soap_begin_recv(soap) || !soap_get_std__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 std::string * SOAP_FMAC2 soap_instantiate_std__string(struct soap*, int, const char*, const char*, size_t*);

inline std::string * soap_new_std__string(struct soap *soap, int n = -1) { return soap_instantiate_std__string(soap, n, NULL, NULL, NULL); }

inline std::string * soap_new_req_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline std::string * soap_new_set_std__string(struct soap *soap) { std::string *_p = soap_instantiate_std__string(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_std__string(soap, _p); } return _p; }

inline void soap_delete_std__string(struct soap *soap, std::string *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__addSendinfoResponse
#define SOAP_TYPE_ns21__addSendinfoResponse (22)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__addSendinfoResponse(struct soap*, const char*, int, const ns21__addSendinfoResponse *, const char*);
SOAP_FMAC3 ns21__addSendinfoResponse * SOAP_FMAC4 soap_in_ns21__addSendinfoResponse(struct soap*, const char*, ns21__addSendinfoResponse *, const char*);

#ifndef soap_write_ns21__addSendinfoResponse
#define soap_write_ns21__addSendinfoResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:addSendinfoResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addSendinfoResponse * SOAP_FMAC4 soap_get_ns21__addSendinfoResponse(struct soap*, ns21__addSendinfoResponse *, const char*, const char*);

#ifndef soap_read_ns21__addSendinfoResponse
#define soap_read_ns21__addSendinfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__addSendinfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__addSendinfoResponse * SOAP_FMAC2 soap_instantiate_ns21__addSendinfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns21__addSendinfoResponse * soap_new_ns21__addSendinfoResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns21__addSendinfoResponse(soap, n, NULL, NULL, NULL); }

inline ns21__addSendinfoResponse * soap_new_req_ns21__addSendinfoResponse(struct soap *soap) { ns21__addSendinfoResponse *_p = soap_instantiate_ns21__addSendinfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__addSendinfoResponse * soap_new_set_ns21__addSendinfoResponse(struct soap *soap, std::string *return_) { ns21__addSendinfoResponse *_p = soap_instantiate_ns21__addSendinfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__addSendinfoResponse::return_ = return_; } return _p; }

inline void soap_delete_ns21__addSendinfoResponse(struct soap *soap, ns21__addSendinfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__addSendinfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__addSendinfo
#define SOAP_TYPE_ns21__addSendinfo (21)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__addSendinfo(struct soap*, const char*, int, const ns21__addSendinfo *, const char*);
SOAP_FMAC3 ns21__addSendinfo * SOAP_FMAC4 soap_in_ns21__addSendinfo(struct soap*, const char*, ns21__addSendinfo *, const char*);

#ifndef soap_write_ns21__addSendinfo
#define soap_write_ns21__addSendinfo(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:addSendinfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addSendinfo * SOAP_FMAC4 soap_get_ns21__addSendinfo(struct soap*, ns21__addSendinfo *, const char*, const char*);

#ifndef soap_read_ns21__addSendinfo
#define soap_read_ns21__addSendinfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__addSendinfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__addSendinfo * SOAP_FMAC2 soap_instantiate_ns21__addSendinfo(struct soap*, int, const char*, const char*, size_t*);

inline ns21__addSendinfo * soap_new_ns21__addSendinfo(struct soap *soap, int n = -1) { return soap_instantiate_ns21__addSendinfo(soap, n, NULL, NULL, NULL); }

inline ns21__addSendinfo * soap_new_req_ns21__addSendinfo(struct soap *soap) { ns21__addSendinfo *_p = soap_instantiate_ns21__addSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__addSendinfo * soap_new_set_ns21__addSendinfo(struct soap *soap, std::string *arg0) { ns21__addSendinfo *_p = soap_instantiate_ns21__addSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__addSendinfo::arg0 = arg0; } return _p; }

inline void soap_delete_ns21__addSendinfo(struct soap *soap, ns21__addSendinfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__addSendinfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__addNodeResponse
#define SOAP_TYPE_ns21__addNodeResponse (20)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__addNodeResponse(struct soap*, const char*, int, const ns21__addNodeResponse *, const char*);
SOAP_FMAC3 ns21__addNodeResponse * SOAP_FMAC4 soap_in_ns21__addNodeResponse(struct soap*, const char*, ns21__addNodeResponse *, const char*);

#ifndef soap_write_ns21__addNodeResponse
#define soap_write_ns21__addNodeResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:addNodeResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addNodeResponse * SOAP_FMAC4 soap_get_ns21__addNodeResponse(struct soap*, ns21__addNodeResponse *, const char*, const char*);

#ifndef soap_read_ns21__addNodeResponse
#define soap_read_ns21__addNodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__addNodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__addNodeResponse * SOAP_FMAC2 soap_instantiate_ns21__addNodeResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns21__addNodeResponse * soap_new_ns21__addNodeResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns21__addNodeResponse(soap, n, NULL, NULL, NULL); }

inline ns21__addNodeResponse * soap_new_req_ns21__addNodeResponse(struct soap *soap) { ns21__addNodeResponse *_p = soap_instantiate_ns21__addNodeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__addNodeResponse * soap_new_set_ns21__addNodeResponse(struct soap *soap, int *return_) { ns21__addNodeResponse *_p = soap_instantiate_ns21__addNodeResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__addNodeResponse::return_ = return_; } return _p; }

inline void soap_delete_ns21__addNodeResponse(struct soap *soap, ns21__addNodeResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__addNodeResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__addNode
#define SOAP_TYPE_ns21__addNode (19)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__addNode(struct soap*, const char*, int, const ns21__addNode *, const char*);
SOAP_FMAC3 ns21__addNode * SOAP_FMAC4 soap_in_ns21__addNode(struct soap*, const char*, ns21__addNode *, const char*);

#ifndef soap_write_ns21__addNode
#define soap_write_ns21__addNode(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:addNode", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addNode * SOAP_FMAC4 soap_get_ns21__addNode(struct soap*, ns21__addNode *, const char*, const char*);

#ifndef soap_read_ns21__addNode
#define soap_read_ns21__addNode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__addNode(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__addNode * SOAP_FMAC2 soap_instantiate_ns21__addNode(struct soap*, int, const char*, const char*, size_t*);

inline ns21__addNode * soap_new_ns21__addNode(struct soap *soap, int n = -1) { return soap_instantiate_ns21__addNode(soap, n, NULL, NULL, NULL); }

inline ns21__addNode * soap_new_req_ns21__addNode(struct soap *soap) { ns21__addNode *_p = soap_instantiate_ns21__addNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__addNode * soap_new_set_ns21__addNode(struct soap *soap, ns21__WNode *arg0) { ns21__addNode *_p = soap_instantiate_ns21__addNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__addNode::arg0 = arg0; } return _p; }

inline void soap_delete_ns21__addNode(struct soap *soap, ns21__addNode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__addNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__dispenseResponse
#define SOAP_TYPE_ns21__dispenseResponse (18)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__dispenseResponse(struct soap*, const char*, int, const ns21__dispenseResponse *, const char*);
SOAP_FMAC3 ns21__dispenseResponse * SOAP_FMAC4 soap_in_ns21__dispenseResponse(struct soap*, const char*, ns21__dispenseResponse *, const char*);

#ifndef soap_write_ns21__dispenseResponse
#define soap_write_ns21__dispenseResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:dispenseResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__dispenseResponse * SOAP_FMAC4 soap_get_ns21__dispenseResponse(struct soap*, ns21__dispenseResponse *, const char*, const char*);

#ifndef soap_read_ns21__dispenseResponse
#define soap_read_ns21__dispenseResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__dispenseResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__dispenseResponse * SOAP_FMAC2 soap_instantiate_ns21__dispenseResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns21__dispenseResponse * soap_new_ns21__dispenseResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns21__dispenseResponse(soap, n, NULL, NULL, NULL); }

inline ns21__dispenseResponse * soap_new_req_ns21__dispenseResponse(struct soap *soap, bool return_) { ns21__dispenseResponse *_p = soap_instantiate_ns21__dispenseResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__dispenseResponse::return_ = return_; } return _p; }

inline ns21__dispenseResponse * soap_new_set_ns21__dispenseResponse(struct soap *soap, bool return_) { ns21__dispenseResponse *_p = soap_instantiate_ns21__dispenseResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__dispenseResponse::return_ = return_; } return _p; }

inline void soap_delete_ns21__dispenseResponse(struct soap *soap, ns21__dispenseResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__dispenseResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__dispense
#define SOAP_TYPE_ns21__dispense (17)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__dispense(struct soap*, const char*, int, const ns21__dispense *, const char*);
SOAP_FMAC3 ns21__dispense * SOAP_FMAC4 soap_in_ns21__dispense(struct soap*, const char*, ns21__dispense *, const char*);

#ifndef soap_write_ns21__dispense
#define soap_write_ns21__dispense(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:dispense", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__dispense * SOAP_FMAC4 soap_get_ns21__dispense(struct soap*, ns21__dispense *, const char*, const char*);

#ifndef soap_read_ns21__dispense
#define soap_read_ns21__dispense(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__dispense(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__dispense * SOAP_FMAC2 soap_instantiate_ns21__dispense(struct soap*, int, const char*, const char*, size_t*);

inline ns21__dispense * soap_new_ns21__dispense(struct soap *soap, int n = -1) { return soap_instantiate_ns21__dispense(soap, n, NULL, NULL, NULL); }

inline ns21__dispense * soap_new_req_ns21__dispense(struct soap *soap) { ns21__dispense *_p = soap_instantiate_ns21__dispense(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__dispense * soap_new_set_ns21__dispense(struct soap *soap, ns21__PackInfo *arg0) { ns21__dispense *_p = soap_instantiate_ns21__dispense(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__dispense::arg0 = arg0; } return _p; }

inline void soap_delete_ns21__dispense(struct soap *soap, ns21__dispense *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__dispense(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__getSendinfoResponse
#define SOAP_TYPE_ns21__getSendinfoResponse (16)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__getSendinfoResponse(struct soap*, const char*, int, const ns21__getSendinfoResponse *, const char*);
SOAP_FMAC3 ns21__getSendinfoResponse * SOAP_FMAC4 soap_in_ns21__getSendinfoResponse(struct soap*, const char*, ns21__getSendinfoResponse *, const char*);

#ifndef soap_write_ns21__getSendinfoResponse
#define soap_write_ns21__getSendinfoResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:getSendinfoResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__getSendinfoResponse * SOAP_FMAC4 soap_get_ns21__getSendinfoResponse(struct soap*, ns21__getSendinfoResponse *, const char*, const char*);

#ifndef soap_read_ns21__getSendinfoResponse
#define soap_read_ns21__getSendinfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__getSendinfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__getSendinfoResponse * SOAP_FMAC2 soap_instantiate_ns21__getSendinfoResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns21__getSendinfoResponse * soap_new_ns21__getSendinfoResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns21__getSendinfoResponse(soap, n, NULL, NULL, NULL); }

inline ns21__getSendinfoResponse * soap_new_req_ns21__getSendinfoResponse(struct soap *soap) { ns21__getSendinfoResponse *_p = soap_instantiate_ns21__getSendinfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__getSendinfoResponse * soap_new_set_ns21__getSendinfoResponse(struct soap *soap, std::vector<ns21__SendinfoTask * >& return_) { ns21__getSendinfoResponse *_p = soap_instantiate_ns21__getSendinfoResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__getSendinfoResponse::return_ = return_; } return _p; }

inline void soap_delete_ns21__getSendinfoResponse(struct soap *soap, ns21__getSendinfoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__getSendinfoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__getSendinfo
#define SOAP_TYPE_ns21__getSendinfo (15)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__getSendinfo(struct soap*, const char*, int, const ns21__getSendinfo *, const char*);
SOAP_FMAC3 ns21__getSendinfo * SOAP_FMAC4 soap_in_ns21__getSendinfo(struct soap*, const char*, ns21__getSendinfo *, const char*);

#ifndef soap_write_ns21__getSendinfo
#define soap_write_ns21__getSendinfo(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:getSendinfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__getSendinfo * SOAP_FMAC4 soap_get_ns21__getSendinfo(struct soap*, ns21__getSendinfo *, const char*, const char*);

#ifndef soap_read_ns21__getSendinfo
#define soap_read_ns21__getSendinfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__getSendinfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__getSendinfo * SOAP_FMAC2 soap_instantiate_ns21__getSendinfo(struct soap*, int, const char*, const char*, size_t*);

inline ns21__getSendinfo * soap_new_ns21__getSendinfo(struct soap *soap, int n = -1) { return soap_instantiate_ns21__getSendinfo(soap, n, NULL, NULL, NULL); }

inline ns21__getSendinfo * soap_new_req_ns21__getSendinfo(struct soap *soap) { ns21__getSendinfo *_p = soap_instantiate_ns21__getSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__getSendinfo * soap_new_set_ns21__getSendinfo(struct soap *soap, std::string *arg0) { ns21__getSendinfo *_p = soap_instantiate_ns21__getSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__getSendinfo::arg0 = arg0; } return _p; }

inline void soap_delete_ns21__getSendinfo(struct soap *soap, ns21__getSendinfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__getSendinfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__TransferResultSecondResponse
#define SOAP_TYPE_ns21__TransferResultSecondResponse (14)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__TransferResultSecondResponse(struct soap*, const char*, int, const ns21__TransferResultSecondResponse *, const char*);
SOAP_FMAC3 ns21__TransferResultSecondResponse * SOAP_FMAC4 soap_in_ns21__TransferResultSecondResponse(struct soap*, const char*, ns21__TransferResultSecondResponse *, const char*);

#ifndef soap_write_ns21__TransferResultSecondResponse
#define soap_write_ns21__TransferResultSecondResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:TransferResultSecondResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__TransferResultSecondResponse * SOAP_FMAC4 soap_get_ns21__TransferResultSecondResponse(struct soap*, ns21__TransferResultSecondResponse *, const char*, const char*);

#ifndef soap_read_ns21__TransferResultSecondResponse
#define soap_read_ns21__TransferResultSecondResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__TransferResultSecondResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__TransferResultSecondResponse * SOAP_FMAC2 soap_instantiate_ns21__TransferResultSecondResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns21__TransferResultSecondResponse * soap_new_ns21__TransferResultSecondResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns21__TransferResultSecondResponse(soap, n, NULL, NULL, NULL); }

inline ns21__TransferResultSecondResponse * soap_new_req_ns21__TransferResultSecondResponse(struct soap *soap) { ns21__TransferResultSecondResponse *_p = soap_instantiate_ns21__TransferResultSecondResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__TransferResultSecondResponse * soap_new_set_ns21__TransferResultSecondResponse(struct soap *soap) { ns21__TransferResultSecondResponse *_p = soap_instantiate_ns21__TransferResultSecondResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_ns21__TransferResultSecondResponse(struct soap *soap, ns21__TransferResultSecondResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__TransferResultSecondResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__TransferResultSecond
#define SOAP_TYPE_ns21__TransferResultSecond (13)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__TransferResultSecond(struct soap*, const char*, int, const ns21__TransferResultSecond *, const char*);
SOAP_FMAC3 ns21__TransferResultSecond * SOAP_FMAC4 soap_in_ns21__TransferResultSecond(struct soap*, const char*, ns21__TransferResultSecond *, const char*);

#ifndef soap_write_ns21__TransferResultSecond
#define soap_write_ns21__TransferResultSecond(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:TransferResultSecond", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__TransferResultSecond * SOAP_FMAC4 soap_get_ns21__TransferResultSecond(struct soap*, ns21__TransferResultSecond *, const char*, const char*);

#ifndef soap_read_ns21__TransferResultSecond
#define soap_read_ns21__TransferResultSecond(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__TransferResultSecond(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__TransferResultSecond * SOAP_FMAC2 soap_instantiate_ns21__TransferResultSecond(struct soap*, int, const char*, const char*, size_t*);

inline ns21__TransferResultSecond * soap_new_ns21__TransferResultSecond(struct soap *soap, int n = -1) { return soap_instantiate_ns21__TransferResultSecond(soap, n, NULL, NULL, NULL); }

inline ns21__TransferResultSecond * soap_new_req_ns21__TransferResultSecond(struct soap *soap, bool arg1) { ns21__TransferResultSecond *_p = soap_instantiate_ns21__TransferResultSecond(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__TransferResultSecond::arg1 = arg1; } return _p; }

inline ns21__TransferResultSecond * soap_new_set_ns21__TransferResultSecond(struct soap *soap, std::string *arg0, bool arg1) { ns21__TransferResultSecond *_p = soap_instantiate_ns21__TransferResultSecond(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__TransferResultSecond::arg0 = arg0; _p->ns21__TransferResultSecond::arg1 = arg1; } return _p; }

inline void soap_delete_ns21__TransferResultSecond(struct soap *soap, ns21__TransferResultSecond *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__TransferResultSecond(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__transferResultResponse
#define SOAP_TYPE_ns21__transferResultResponse (12)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__transferResultResponse(struct soap*, const char*, int, const ns21__transferResultResponse *, const char*);
SOAP_FMAC3 ns21__transferResultResponse * SOAP_FMAC4 soap_in_ns21__transferResultResponse(struct soap*, const char*, ns21__transferResultResponse *, const char*);

#ifndef soap_write_ns21__transferResultResponse
#define soap_write_ns21__transferResultResponse(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:transferResultResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__transferResultResponse * SOAP_FMAC4 soap_get_ns21__transferResultResponse(struct soap*, ns21__transferResultResponse *, const char*, const char*);

#ifndef soap_read_ns21__transferResultResponse
#define soap_read_ns21__transferResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__transferResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__transferResultResponse * SOAP_FMAC2 soap_instantiate_ns21__transferResultResponse(struct soap*, int, const char*, const char*, size_t*);

inline ns21__transferResultResponse * soap_new_ns21__transferResultResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns21__transferResultResponse(soap, n, NULL, NULL, NULL); }

inline ns21__transferResultResponse * soap_new_req_ns21__transferResultResponse(struct soap *soap) { ns21__transferResultResponse *_p = soap_instantiate_ns21__transferResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__transferResultResponse * soap_new_set_ns21__transferResultResponse(struct soap *soap) { ns21__transferResultResponse *_p = soap_instantiate_ns21__transferResultResponse(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline void soap_delete_ns21__transferResultResponse(struct soap *soap, ns21__transferResultResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__transferResultResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__transferResult
#define SOAP_TYPE_ns21__transferResult (11)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__transferResult(struct soap*, const char*, int, const ns21__transferResult *, const char*);
SOAP_FMAC3 ns21__transferResult * SOAP_FMAC4 soap_in_ns21__transferResult(struct soap*, const char*, ns21__transferResult *, const char*);

#ifndef soap_write_ns21__transferResult
#define soap_write_ns21__transferResult(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:transferResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__transferResult * SOAP_FMAC4 soap_get_ns21__transferResult(struct soap*, ns21__transferResult *, const char*, const char*);

#ifndef soap_read_ns21__transferResult
#define soap_read_ns21__transferResult(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__transferResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__transferResult * SOAP_FMAC2 soap_instantiate_ns21__transferResult(struct soap*, int, const char*, const char*, size_t*);

inline ns21__transferResult * soap_new_ns21__transferResult(struct soap *soap, int n = -1) { return soap_instantiate_ns21__transferResult(soap, n, NULL, NULL, NULL); }

inline ns21__transferResult * soap_new_req_ns21__transferResult(struct soap *soap, bool arg1) { ns21__transferResult *_p = soap_instantiate_ns21__transferResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__transferResult::arg1 = arg1; } return _p; }

inline ns21__transferResult * soap_new_set_ns21__transferResult(struct soap *soap, std::string *arg0, bool arg1) { ns21__transferResult *_p = soap_instantiate_ns21__transferResult(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__transferResult::arg0 = arg0; _p->ns21__transferResult::arg1 = arg1; } return _p; }

inline void soap_delete_ns21__transferResult(struct soap *soap, ns21__transferResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__transferResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__WNode
#define SOAP_TYPE_ns21__WNode (10)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__WNode(struct soap*, const char*, int, const ns21__WNode *, const char*);
SOAP_FMAC3 ns21__WNode * SOAP_FMAC4 soap_in_ns21__WNode(struct soap*, const char*, ns21__WNode *, const char*);

#ifndef soap_write_ns21__WNode
#define soap_write_ns21__WNode(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:WNode", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__WNode * SOAP_FMAC4 soap_get_ns21__WNode(struct soap*, ns21__WNode *, const char*, const char*);

#ifndef soap_read_ns21__WNode
#define soap_read_ns21__WNode(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__WNode(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__WNode * SOAP_FMAC2 soap_instantiate_ns21__WNode(struct soap*, int, const char*, const char*, size_t*);

inline ns21__WNode * soap_new_ns21__WNode(struct soap *soap, int n = -1) { return soap_instantiate_ns21__WNode(soap, n, NULL, NULL, NULL); }

inline ns21__WNode * soap_new_req_ns21__WNode(struct soap *soap, std::string& nodeName, std::string& nodeCode, std::string& city, int cinemaType, std::string& transferMode) { ns21__WNode *_p = soap_instantiate_ns21__WNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__WNode::nodeName = nodeName; _p->ns21__WNode::nodeCode = nodeCode; _p->ns21__WNode::city = city; _p->ns21__WNode::cinemaType = cinemaType; _p->ns21__WNode::transferMode = transferMode; } return _p; }

inline ns21__WNode * soap_new_set_ns21__WNode(struct soap *soap, std::string& nodeName, std::string& nodeCode, std::string& city, int cinemaType, std::string *userName, std::string *tel, std::string& transferMode) { ns21__WNode *_p = soap_instantiate_ns21__WNode(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__WNode::nodeName = nodeName; _p->ns21__WNode::nodeCode = nodeCode; _p->ns21__WNode::city = city; _p->ns21__WNode::cinemaType = cinemaType; _p->ns21__WNode::userName = userName; _p->ns21__WNode::tel = tel; _p->ns21__WNode::transferMode = transferMode; } return _p; }

inline void soap_delete_ns21__WNode(struct soap *soap, ns21__WNode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__WNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__PackInfo
#define SOAP_TYPE_ns21__PackInfo (9)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__PackInfo(struct soap*, const char*, int, const ns21__PackInfo *, const char*);
SOAP_FMAC3 ns21__PackInfo * SOAP_FMAC4 soap_in_ns21__PackInfo(struct soap*, const char*, ns21__PackInfo *, const char*);

#ifndef soap_write_ns21__PackInfo
#define soap_write_ns21__PackInfo(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:PackInfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__PackInfo * SOAP_FMAC4 soap_get_ns21__PackInfo(struct soap*, ns21__PackInfo *, const char*, const char*);

#ifndef soap_read_ns21__PackInfo
#define soap_read_ns21__PackInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__PackInfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__PackInfo * SOAP_FMAC2 soap_instantiate_ns21__PackInfo(struct soap*, int, const char*, const char*, size_t*);

inline ns21__PackInfo * soap_new_ns21__PackInfo(struct soap *soap, int n = -1) { return soap_instantiate_ns21__PackInfo(soap, n, NULL, NULL, NULL); }

inline ns21__PackInfo * soap_new_req_ns21__PackInfo(struct soap *soap) { ns21__PackInfo *_p = soap_instantiate_ns21__PackInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); } return _p; }

inline ns21__PackInfo * soap_new_set_ns21__PackInfo(struct soap *soap, std::string *uuid, std::string *packTitle, std::string *packName, std::string *packSize, std::string *ftpAdress) { ns21__PackInfo *_p = soap_instantiate_ns21__PackInfo(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__PackInfo::uuid = uuid; _p->ns21__PackInfo::packTitle = packTitle; _p->ns21__PackInfo::packName = packName; _p->ns21__PackInfo::packSize = packSize; _p->ns21__PackInfo::ftpAdress = ftpAdress; } return _p; }

inline void soap_delete_ns21__PackInfo(struct soap *soap, ns21__PackInfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__PackInfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns21__SendinfoTask
#define SOAP_TYPE_ns21__SendinfoTask (8)
#endif

SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns21__SendinfoTask(struct soap*, const char*, int, const ns21__SendinfoTask *, const char*);
SOAP_FMAC3 ns21__SendinfoTask * SOAP_FMAC4 soap_in_ns21__SendinfoTask(struct soap*, const char*, ns21__SendinfoTask *, const char*);

#ifndef soap_write_ns21__SendinfoTask
#define soap_write_ns21__SendinfoTask(soap, data) ( soap_begin(soap), (data)->soap_serialize(soap), soap_begin_send(soap) || (data)->soap_put(soap, "ns21:SendinfoTask", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__SendinfoTask * SOAP_FMAC4 soap_get_ns21__SendinfoTask(struct soap*, ns21__SendinfoTask *, const char*, const char*);

#ifndef soap_read_ns21__SendinfoTask
#define soap_read_ns21__SendinfoTask(soap, data) ( soap_begin_recv(soap) || !soap_get_ns21__SendinfoTask(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 ns21__SendinfoTask * SOAP_FMAC2 soap_instantiate_ns21__SendinfoTask(struct soap*, int, const char*, const char*, size_t*);

inline ns21__SendinfoTask * soap_new_ns21__SendinfoTask(struct soap *soap, int n = -1) { return soap_instantiate_ns21__SendinfoTask(soap, n, NULL, NULL, NULL); }

inline ns21__SendinfoTask * soap_new_req_ns21__SendinfoTask(struct soap *soap, std::string& nodeCode, std::string& nodeName, std::string& dateLine, std::string& finishTime, std::string& taskState, std::string& taskRate) { ns21__SendinfoTask *_p = soap_instantiate_ns21__SendinfoTask(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__SendinfoTask::nodeCode = nodeCode; _p->ns21__SendinfoTask::nodeName = nodeName; _p->ns21__SendinfoTask::dateLine = dateLine; _p->ns21__SendinfoTask::finishTime = finishTime; _p->ns21__SendinfoTask::taskState = taskState; _p->ns21__SendinfoTask::taskRate = taskRate; } return _p; }

inline ns21__SendinfoTask * soap_new_set_ns21__SendinfoTask(struct soap *soap, std::string& nodeCode, std::string& nodeName, std::string& dateLine, std::string& finishTime, std::string& taskState, std::string& taskRate) { ns21__SendinfoTask *_p = soap_instantiate_ns21__SendinfoTask(soap, -1, NULL, NULL, NULL); if (_p) { _p->soap_default(soap); _p->ns21__SendinfoTask::nodeCode = nodeCode; _p->ns21__SendinfoTask::nodeName = nodeName; _p->ns21__SendinfoTask::dateLine = dateLine; _p->ns21__SendinfoTask::finishTime = finishTime; _p->ns21__SendinfoTask::taskState = taskState; _p->ns21__SendinfoTask::taskRate = taskRate; } return _p; }

inline void soap_delete_ns21__SendinfoTask(struct soap *soap, ns21__SendinfoTask *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns21__SendinfoTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (89)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Fault(struct soap*, const char*, int, const struct SOAP_ENV__Fault *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_in_SOAP_ENV__Fault(struct soap*, const char*, struct SOAP_ENV__Fault *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Fault(struct soap*, const struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Fault
#define soap_write_SOAP_ENV__Fault(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Fault(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Fault(soap, data, "SOAP-ENV:Fault", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Fault * SOAP_FMAC4 soap_get_SOAP_ENV__Fault(struct soap*, struct SOAP_ENV__Fault *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Fault
#define soap_read_SOAP_ENV__Fault(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Fault(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Fault * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Fault(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Fault * soap_new_SOAP_ENV__Fault(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Fault(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Fault * soap_new_req_SOAP_ENV__Fault(struct soap *soap) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); } return _p; }

inline struct SOAP_ENV__Fault * soap_new_set_SOAP_ENV__Fault(struct soap *soap, char *faultcode, char *faultstring, char *faultactor, struct SOAP_ENV__Detail *detail, struct SOAP_ENV__Code *SOAP_ENV__Code, struct SOAP_ENV__Reason *SOAP_ENV__Reason, char *SOAP_ENV__Node, char *SOAP_ENV__Role, struct SOAP_ENV__Detail *SOAP_ENV__Detail) { struct SOAP_ENV__Fault *_p = soap_instantiate_SOAP_ENV__Fault(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Fault(soap, _p); _p->faultcode = faultcode; _p->faultstring = faultstring; _p->faultactor = faultactor; _p->detail = detail; _p->SOAP_ENV__Code = SOAP_ENV__Code; _p->SOAP_ENV__Reason = SOAP_ENV__Reason; _p->SOAP_ENV__Node = SOAP_ENV__Node; _p->SOAP_ENV__Role = SOAP_ENV__Role; _p->SOAP_ENV__Detail = SOAP_ENV__Detail; } return _p; }

inline void soap_delete_SOAP_ENV__Fault(struct soap *soap, struct SOAP_ENV__Fault *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Fault(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (88)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Reason(struct soap*, const char*, int, const struct SOAP_ENV__Reason *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_in_SOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Reason(struct soap*, const struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Reason
#define soap_write_SOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason * SOAP_FMAC4 soap_get_SOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Reason
#define soap_read_SOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Reason * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Reason(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Reason * soap_new_SOAP_ENV__Reason(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Reason(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Reason * soap_new_req_SOAP_ENV__Reason(struct soap *soap) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); } return _p; }

inline struct SOAP_ENV__Reason * soap_new_set_SOAP_ENV__Reason(struct soap *soap, char *SOAP_ENV__Text) { struct SOAP_ENV__Reason *_p = soap_instantiate_SOAP_ENV__Reason(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Reason(soap, _p); _p->SOAP_ENV__Text = SOAP_ENV__Text; } return _p; }

inline void soap_delete_SOAP_ENV__Reason(struct soap *soap, struct SOAP_ENV__Reason *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Reason(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (85)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Detail(struct soap*, const char*, int, const struct SOAP_ENV__Detail *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_in_SOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Detail(struct soap*, const struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Detail
#define soap_write_SOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail * SOAP_FMAC4 soap_get_SOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Detail
#define soap_read_SOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Detail * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Detail(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Detail * soap_new_SOAP_ENV__Detail(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Detail(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Detail * soap_new_req_SOAP_ENV__Detail(struct soap *soap, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__type = __type; _p->fault = fault; } return _p; }

inline struct SOAP_ENV__Detail * soap_new_set_SOAP_ENV__Detail(struct soap *soap, char *__any, int __type, void *fault) { struct SOAP_ENV__Detail *_p = soap_instantiate_SOAP_ENV__Detail(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Detail(soap, _p); _p->__any = __any; _p->__type = __type; _p->fault = fault; } return _p; }

inline void soap_delete_SOAP_ENV__Detail(struct soap *soap, struct SOAP_ENV__Detail *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Detail(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (83)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Code(struct soap*, const char*, int, const struct SOAP_ENV__Code *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_in_SOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Code(struct soap*, const struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Code
#define soap_write_SOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code * SOAP_FMAC4 soap_get_SOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Code
#define soap_read_SOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Code * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Code(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Code * soap_new_SOAP_ENV__Code(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Code(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Code * soap_new_req_SOAP_ENV__Code(struct soap *soap) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); } return _p; }

inline struct SOAP_ENV__Code * soap_new_set_SOAP_ENV__Code(struct soap *soap, char *SOAP_ENV__Value, struct SOAP_ENV__Code *SOAP_ENV__Subcode) { struct SOAP_ENV__Code *_p = soap_instantiate_SOAP_ENV__Code(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Code(soap, _p); _p->SOAP_ENV__Value = SOAP_ENV__Value; _p->SOAP_ENV__Subcode = SOAP_ENV__Subcode; } return _p; }

inline void soap_delete_SOAP_ENV__Code(struct soap *soap, struct SOAP_ENV__Code *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Code(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (82)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_SOAP_ENV__Header(struct soap*, const char*, int, const struct SOAP_ENV__Header *, const char*);
SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_in_SOAP_ENV__Header(struct soap*, const char*, struct SOAP_ENV__Header *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_SOAP_ENV__Header(struct soap*, const struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_write_SOAP_ENV__Header
#define soap_write_SOAP_ENV__Header(soap, data) ( soap_begin(soap), soap_serialize_SOAP_ENV__Header(soap, data), soap_begin_send(soap) || soap_put_SOAP_ENV__Header(soap, data, "SOAP-ENV:Header", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Header * SOAP_FMAC4 soap_get_SOAP_ENV__Header(struct soap*, struct SOAP_ENV__Header *, const char*, const char*);

#ifndef soap_read_SOAP_ENV__Header
#define soap_read_SOAP_ENV__Header(soap, data) ( soap_begin_recv(soap) || !soap_get_SOAP_ENV__Header(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct SOAP_ENV__Header * SOAP_FMAC2 soap_instantiate_SOAP_ENV__Header(struct soap*, int, const char*, const char*, size_t*);

inline struct SOAP_ENV__Header * soap_new_SOAP_ENV__Header(struct soap *soap, int n = -1) { return soap_instantiate_SOAP_ENV__Header(soap, n, NULL, NULL, NULL); }

inline struct SOAP_ENV__Header * soap_new_req_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline struct SOAP_ENV__Header * soap_new_set_SOAP_ENV__Header(struct soap *soap) { struct SOAP_ENV__Header *_p = soap_instantiate_SOAP_ENV__Header(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_SOAP_ENV__Header(soap, _p); } return _p; }

inline void soap_delete_SOAP_ENV__Header(struct soap *soap, struct SOAP_ENV__Header *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_SOAP_ENV__Header(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

#ifndef SOAP_TYPE_ns1__maketo
#define SOAP_TYPE_ns1__maketo (81)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__maketo(struct soap*, struct ns1__maketo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__maketo(struct soap*, const struct ns1__maketo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__maketo(struct soap*, const char*, int, const struct ns1__maketo *, const char*);
SOAP_FMAC3 struct ns1__maketo * SOAP_FMAC4 soap_in_ns1__maketo(struct soap*, const char*, struct ns1__maketo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__maketo(struct soap*, const struct ns1__maketo *, const char*, const char*);

#ifndef soap_write_ns1__maketo
#define soap_write_ns1__maketo(soap, data) ( soap_begin(soap), soap_serialize_ns1__maketo(soap, data), soap_begin_send(soap) || soap_put_ns1__maketo(soap, data, "ns1:maketo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__maketo * SOAP_FMAC4 soap_get_ns1__maketo(struct soap*, struct ns1__maketo *, const char*, const char*);

#ifndef soap_read_ns1__maketo
#define soap_read_ns1__maketo(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__maketo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__maketo * SOAP_FMAC2 soap_instantiate_ns1__maketo(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__maketo * soap_new_ns1__maketo(struct soap *soap, int n = -1) { return soap_instantiate_ns1__maketo(soap, n, NULL, NULL, NULL); }

inline struct ns1__maketo * soap_new_req_ns1__maketo(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__maketo *_p = soap_instantiate_ns1__maketo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__maketo(soap, _p); _p->param = param; } return _p; }

inline struct ns1__maketo * soap_new_set_ns1__maketo(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__maketo *_p = soap_instantiate_ns1__maketo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__maketo(soap, _p); _p->param = param; } return _p; }

inline void soap_delete_ns1__maketo(struct soap *soap, struct ns1__maketo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__maketo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__maketoResponse
#define SOAP_TYPE_ns1__maketoResponse (80)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__maketoResponse(struct soap*, struct ns1__maketoResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__maketoResponse(struct soap*, const struct ns1__maketoResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__maketoResponse(struct soap*, const char*, int, const struct ns1__maketoResponse *, const char*);
SOAP_FMAC3 struct ns1__maketoResponse * SOAP_FMAC4 soap_in_ns1__maketoResponse(struct soap*, const char*, struct ns1__maketoResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__maketoResponse(struct soap*, const struct ns1__maketoResponse *, const char*, const char*);

#ifndef soap_write_ns1__maketoResponse
#define soap_write_ns1__maketoResponse(soap, data) ( soap_begin(soap), soap_serialize_ns1__maketoResponse(soap, data), soap_begin_send(soap) || soap_put_ns1__maketoResponse(soap, data, "ns1:maketoResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__maketoResponse * SOAP_FMAC4 soap_get_ns1__maketoResponse(struct soap*, struct ns1__maketoResponse *, const char*, const char*);

#ifndef soap_read_ns1__maketoResponse
#define soap_read_ns1__maketoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__maketoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__maketoResponse * SOAP_FMAC2 soap_instantiate_ns1__maketoResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__maketoResponse * soap_new_ns1__maketoResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__maketoResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__maketoResponse * soap_new_req_ns1__maketoResponse(struct soap *soap, bool ret) { struct ns1__maketoResponse *_p = soap_instantiate_ns1__maketoResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__maketoResponse(soap, _p); _p->ret = ret; } return _p; }

inline struct ns1__maketoResponse * soap_new_set_ns1__maketoResponse(struct soap *soap, bool ret) { struct ns1__maketoResponse *_p = soap_instantiate_ns1__maketoResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__maketoResponse(soap, _p); _p->ret = ret; } return _p; }

inline void soap_delete_ns1__maketoResponse(struct soap *soap, struct ns1__maketoResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__maketoResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getTempPackage
#define SOAP_TYPE_ns1__getTempPackage (78)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getTempPackage(struct soap*, struct ns1__getTempPackage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getTempPackage(struct soap*, const struct ns1__getTempPackage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getTempPackage(struct soap*, const char*, int, const struct ns1__getTempPackage *, const char*);
SOAP_FMAC3 struct ns1__getTempPackage * SOAP_FMAC4 soap_in_ns1__getTempPackage(struct soap*, const char*, struct ns1__getTempPackage *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getTempPackage(struct soap*, const struct ns1__getTempPackage *, const char*, const char*);

#ifndef soap_write_ns1__getTempPackage
#define soap_write_ns1__getTempPackage(soap, data) ( soap_begin(soap), soap_serialize_ns1__getTempPackage(soap, data), soap_begin_send(soap) || soap_put_ns1__getTempPackage(soap, data, "ns1:getTempPackage", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__getTempPackage * SOAP_FMAC4 soap_get_ns1__getTempPackage(struct soap*, struct ns1__getTempPackage *, const char*, const char*);

#ifndef soap_read_ns1__getTempPackage
#define soap_read_ns1__getTempPackage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getTempPackage(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__getTempPackage * SOAP_FMAC2 soap_instantiate_ns1__getTempPackage(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__getTempPackage * soap_new_ns1__getTempPackage(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getTempPackage(soap, n, NULL, NULL, NULL); }

inline struct ns1__getTempPackage * soap_new_req_ns1__getTempPackage(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__getTempPackage *_p = soap_instantiate_ns1__getTempPackage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getTempPackage(soap, _p); _p->param = param; } return _p; }

inline struct ns1__getTempPackage * soap_new_set_ns1__getTempPackage(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__getTempPackage *_p = soap_instantiate_ns1__getTempPackage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getTempPackage(soap, _p); _p->param = param; } return _p; }

inline void soap_delete_ns1__getTempPackage(struct soap *soap, struct ns1__getTempPackage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getTempPackage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getTempPackageResponse
#define SOAP_TYPE_ns1__getTempPackageResponse (77)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getTempPackageResponse(struct soap*, struct ns1__getTempPackageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getTempPackageResponse(struct soap*, const struct ns1__getTempPackageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getTempPackageResponse(struct soap*, const char*, int, const struct ns1__getTempPackageResponse *, const char*);
SOAP_FMAC3 struct ns1__getTempPackageResponse * SOAP_FMAC4 soap_in_ns1__getTempPackageResponse(struct soap*, const char*, struct ns1__getTempPackageResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getTempPackageResponse(struct soap*, const struct ns1__getTempPackageResponse *, const char*, const char*);

#ifndef soap_write_ns1__getTempPackageResponse
#define soap_write_ns1__getTempPackageResponse(soap, data) ( soap_begin(soap), soap_serialize_ns1__getTempPackageResponse(soap, data), soap_begin_send(soap) || soap_put_ns1__getTempPackageResponse(soap, data, "ns1:getTempPackageResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__getTempPackageResponse * SOAP_FMAC4 soap_get_ns1__getTempPackageResponse(struct soap*, struct ns1__getTempPackageResponse *, const char*, const char*);

#ifndef soap_read_ns1__getTempPackageResponse
#define soap_read_ns1__getTempPackageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getTempPackageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__getTempPackageResponse * SOAP_FMAC2 soap_instantiate_ns1__getTempPackageResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__getTempPackageResponse * soap_new_ns1__getTempPackageResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getTempPackageResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__getTempPackageResponse * soap_new_req_ns1__getTempPackageResponse(struct soap *soap, std::vector<std::string >& ret) { struct ns1__getTempPackageResponse *_p = soap_instantiate_ns1__getTempPackageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getTempPackageResponse(soap, _p); _p->ret = ret; } return _p; }

inline struct ns1__getTempPackageResponse * soap_new_set_ns1__getTempPackageResponse(struct soap *soap, std::vector<std::string >& ret) { struct ns1__getTempPackageResponse *_p = soap_instantiate_ns1__getTempPackageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getTempPackageResponse(soap, _p); _p->ret = ret; } return _p; }

inline void soap_delete_ns1__getTempPackageResponse(struct soap *soap, struct ns1__getTempPackageResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getTempPackageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__deletePackage
#define SOAP_TYPE_ns1__deletePackage (73)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__deletePackage(struct soap*, struct ns1__deletePackage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__deletePackage(struct soap*, const struct ns1__deletePackage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deletePackage(struct soap*, const char*, int, const struct ns1__deletePackage *, const char*);
SOAP_FMAC3 struct ns1__deletePackage * SOAP_FMAC4 soap_in_ns1__deletePackage(struct soap*, const char*, struct ns1__deletePackage *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__deletePackage(struct soap*, const struct ns1__deletePackage *, const char*, const char*);

#ifndef soap_write_ns1__deletePackage
#define soap_write_ns1__deletePackage(soap, data) ( soap_begin(soap), soap_serialize_ns1__deletePackage(soap, data), soap_begin_send(soap) || soap_put_ns1__deletePackage(soap, data, "ns1:deletePackage", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__deletePackage * SOAP_FMAC4 soap_get_ns1__deletePackage(struct soap*, struct ns1__deletePackage *, const char*, const char*);

#ifndef soap_read_ns1__deletePackage
#define soap_read_ns1__deletePackage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__deletePackage(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__deletePackage * SOAP_FMAC2 soap_instantiate_ns1__deletePackage(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__deletePackage * soap_new_ns1__deletePackage(struct soap *soap, int n = -1) { return soap_instantiate_ns1__deletePackage(soap, n, NULL, NULL, NULL); }

inline struct ns1__deletePackage * soap_new_req_ns1__deletePackage(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__deletePackage *_p = soap_instantiate_ns1__deletePackage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__deletePackage(soap, _p); _p->param = param; } return _p; }

inline struct ns1__deletePackage * soap_new_set_ns1__deletePackage(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__deletePackage *_p = soap_instantiate_ns1__deletePackage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__deletePackage(soap, _p); _p->param = param; } return _p; }

inline void soap_delete_ns1__deletePackage(struct soap *soap, struct ns1__deletePackage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__deletePackage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__deletePackageResponse
#define SOAP_TYPE_ns1__deletePackageResponse (72)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__deletePackageResponse(struct soap*, struct ns1__deletePackageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__deletePackageResponse(struct soap*, const struct ns1__deletePackageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__deletePackageResponse(struct soap*, const char*, int, const struct ns1__deletePackageResponse *, const char*);
SOAP_FMAC3 struct ns1__deletePackageResponse * SOAP_FMAC4 soap_in_ns1__deletePackageResponse(struct soap*, const char*, struct ns1__deletePackageResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__deletePackageResponse(struct soap*, const struct ns1__deletePackageResponse *, const char*, const char*);

#ifndef soap_write_ns1__deletePackageResponse
#define soap_write_ns1__deletePackageResponse(soap, data) ( soap_begin(soap), soap_serialize_ns1__deletePackageResponse(soap, data), soap_begin_send(soap) || soap_put_ns1__deletePackageResponse(soap, data, "ns1:deletePackageResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__deletePackageResponse * SOAP_FMAC4 soap_get_ns1__deletePackageResponse(struct soap*, struct ns1__deletePackageResponse *, const char*, const char*);

#ifndef soap_read_ns1__deletePackageResponse
#define soap_read_ns1__deletePackageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__deletePackageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__deletePackageResponse * SOAP_FMAC2 soap_instantiate_ns1__deletePackageResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__deletePackageResponse * soap_new_ns1__deletePackageResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__deletePackageResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__deletePackageResponse * soap_new_req_ns1__deletePackageResponse(struct soap *soap, bool ret) { struct ns1__deletePackageResponse *_p = soap_instantiate_ns1__deletePackageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__deletePackageResponse(soap, _p); _p->ret = ret; } return _p; }

inline struct ns1__deletePackageResponse * soap_new_set_ns1__deletePackageResponse(struct soap *soap, bool ret) { struct ns1__deletePackageResponse *_p = soap_instantiate_ns1__deletePackageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__deletePackageResponse(soap, _p); _p->ret = ret; } return _p; }

inline void soap_delete_ns1__deletePackageResponse(struct soap *soap, struct ns1__deletePackageResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__deletePackageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getUsableSpace
#define SOAP_TYPE_ns1__getUsableSpace (70)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getUsableSpace(struct soap*, struct ns1__getUsableSpace *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getUsableSpace(struct soap*, const struct ns1__getUsableSpace *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getUsableSpace(struct soap*, const char*, int, const struct ns1__getUsableSpace *, const char*);
SOAP_FMAC3 struct ns1__getUsableSpace * SOAP_FMAC4 soap_in_ns1__getUsableSpace(struct soap*, const char*, struct ns1__getUsableSpace *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getUsableSpace(struct soap*, const struct ns1__getUsableSpace *, const char*, const char*);

#ifndef soap_write_ns1__getUsableSpace
#define soap_write_ns1__getUsableSpace(soap, data) ( soap_begin(soap), soap_serialize_ns1__getUsableSpace(soap, data), soap_begin_send(soap) || soap_put_ns1__getUsableSpace(soap, data, "ns1:getUsableSpace", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__getUsableSpace * SOAP_FMAC4 soap_get_ns1__getUsableSpace(struct soap*, struct ns1__getUsableSpace *, const char*, const char*);

#ifndef soap_read_ns1__getUsableSpace
#define soap_read_ns1__getUsableSpace(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getUsableSpace(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__getUsableSpace * SOAP_FMAC2 soap_instantiate_ns1__getUsableSpace(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__getUsableSpace * soap_new_ns1__getUsableSpace(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getUsableSpace(soap, n, NULL, NULL, NULL); }

inline struct ns1__getUsableSpace * soap_new_req_ns1__getUsableSpace(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__getUsableSpace *_p = soap_instantiate_ns1__getUsableSpace(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getUsableSpace(soap, _p); _p->param = param; } return _p; }

inline struct ns1__getUsableSpace * soap_new_set_ns1__getUsableSpace(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__getUsableSpace *_p = soap_instantiate_ns1__getUsableSpace(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getUsableSpace(soap, _p); _p->param = param; } return _p; }

inline void soap_delete_ns1__getUsableSpace(struct soap *soap, struct ns1__getUsableSpace *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getUsableSpace(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__getUsableSpaceResponse
#define SOAP_TYPE_ns1__getUsableSpaceResponse (69)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__getUsableSpaceResponse(struct soap*, struct ns1__getUsableSpaceResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__getUsableSpaceResponse(struct soap*, const struct ns1__getUsableSpaceResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__getUsableSpaceResponse(struct soap*, const char*, int, const struct ns1__getUsableSpaceResponse *, const char*);
SOAP_FMAC3 struct ns1__getUsableSpaceResponse * SOAP_FMAC4 soap_in_ns1__getUsableSpaceResponse(struct soap*, const char*, struct ns1__getUsableSpaceResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__getUsableSpaceResponse(struct soap*, const struct ns1__getUsableSpaceResponse *, const char*, const char*);

#ifndef soap_write_ns1__getUsableSpaceResponse
#define soap_write_ns1__getUsableSpaceResponse(soap, data) ( soap_begin(soap), soap_serialize_ns1__getUsableSpaceResponse(soap, data), soap_begin_send(soap) || soap_put_ns1__getUsableSpaceResponse(soap, data, "ns1:getUsableSpaceResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__getUsableSpaceResponse * SOAP_FMAC4 soap_get_ns1__getUsableSpaceResponse(struct soap*, struct ns1__getUsableSpaceResponse *, const char*, const char*);

#ifndef soap_read_ns1__getUsableSpaceResponse
#define soap_read_ns1__getUsableSpaceResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__getUsableSpaceResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__getUsableSpaceResponse * SOAP_FMAC2 soap_instantiate_ns1__getUsableSpaceResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__getUsableSpaceResponse * soap_new_ns1__getUsableSpaceResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__getUsableSpaceResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__getUsableSpaceResponse * soap_new_req_ns1__getUsableSpaceResponse(struct soap *soap, std::string& ret) { struct ns1__getUsableSpaceResponse *_p = soap_instantiate_ns1__getUsableSpaceResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getUsableSpaceResponse(soap, _p); _p->ret = ret; } return _p; }

inline struct ns1__getUsableSpaceResponse * soap_new_set_ns1__getUsableSpaceResponse(struct soap *soap, std::string& ret) { struct ns1__getUsableSpaceResponse *_p = soap_instantiate_ns1__getUsableSpaceResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__getUsableSpaceResponse(soap, _p); _p->ret = ret; } return _p; }

inline void soap_delete_ns1__getUsableSpaceResponse(struct soap *soap, struct ns1__getUsableSpaceResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__getUsableSpaceResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cutPackage
#define SOAP_TYPE_ns1__cutPackage (66)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__cutPackage(struct soap*, struct ns1__cutPackage *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__cutPackage(struct soap*, const struct ns1__cutPackage *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cutPackage(struct soap*, const char*, int, const struct ns1__cutPackage *, const char*);
SOAP_FMAC3 struct ns1__cutPackage * SOAP_FMAC4 soap_in_ns1__cutPackage(struct soap*, const char*, struct ns1__cutPackage *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__cutPackage(struct soap*, const struct ns1__cutPackage *, const char*, const char*);

#ifndef soap_write_ns1__cutPackage
#define soap_write_ns1__cutPackage(soap, data) ( soap_begin(soap), soap_serialize_ns1__cutPackage(soap, data), soap_begin_send(soap) || soap_put_ns1__cutPackage(soap, data, "ns1:cutPackage", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__cutPackage * SOAP_FMAC4 soap_get_ns1__cutPackage(struct soap*, struct ns1__cutPackage *, const char*, const char*);

#ifndef soap_read_ns1__cutPackage
#define soap_read_ns1__cutPackage(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cutPackage(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__cutPackage * SOAP_FMAC2 soap_instantiate_ns1__cutPackage(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__cutPackage * soap_new_ns1__cutPackage(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cutPackage(soap, n, NULL, NULL, NULL); }

inline struct ns1__cutPackage * soap_new_req_ns1__cutPackage(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__cutPackage *_p = soap_instantiate_ns1__cutPackage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__cutPackage(soap, _p); _p->param = param; } return _p; }

inline struct ns1__cutPackage * soap_new_set_ns1__cutPackage(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__cutPackage *_p = soap_instantiate_ns1__cutPackage(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__cutPackage(soap, _p); _p->param = param; } return _p; }

inline void soap_delete_ns1__cutPackage(struct soap *soap, struct ns1__cutPackage *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cutPackage(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__cutPackageResponse
#define SOAP_TYPE_ns1__cutPackageResponse (65)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__cutPackageResponse(struct soap*, struct ns1__cutPackageResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__cutPackageResponse(struct soap*, const struct ns1__cutPackageResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__cutPackageResponse(struct soap*, const char*, int, const struct ns1__cutPackageResponse *, const char*);
SOAP_FMAC3 struct ns1__cutPackageResponse * SOAP_FMAC4 soap_in_ns1__cutPackageResponse(struct soap*, const char*, struct ns1__cutPackageResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__cutPackageResponse(struct soap*, const struct ns1__cutPackageResponse *, const char*, const char*);

#ifndef soap_write_ns1__cutPackageResponse
#define soap_write_ns1__cutPackageResponse(soap, data) ( soap_begin(soap), soap_serialize_ns1__cutPackageResponse(soap, data), soap_begin_send(soap) || soap_put_ns1__cutPackageResponse(soap, data, "ns1:cutPackageResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__cutPackageResponse * SOAP_FMAC4 soap_get_ns1__cutPackageResponse(struct soap*, struct ns1__cutPackageResponse *, const char*, const char*);

#ifndef soap_read_ns1__cutPackageResponse
#define soap_read_ns1__cutPackageResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__cutPackageResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__cutPackageResponse * SOAP_FMAC2 soap_instantiate_ns1__cutPackageResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__cutPackageResponse * soap_new_ns1__cutPackageResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__cutPackageResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__cutPackageResponse * soap_new_req_ns1__cutPackageResponse(struct soap *soap, bool ret) { struct ns1__cutPackageResponse *_p = soap_instantiate_ns1__cutPackageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__cutPackageResponse(soap, _p); _p->ret = ret; } return _p; }

inline struct ns1__cutPackageResponse * soap_new_set_ns1__cutPackageResponse(struct soap *soap, bool ret) { struct ns1__cutPackageResponse *_p = soap_instantiate_ns1__cutPackageResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__cutPackageResponse(soap, _p); _p->ret = ret; } return _p; }

inline void soap_delete_ns1__cutPackageResponse(struct soap *soap, struct ns1__cutPackageResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__cutPackageResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__transfer
#define SOAP_TYPE_ns1__transfer (63)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__transfer(struct soap*, struct ns1__transfer *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__transfer(struct soap*, const struct ns1__transfer *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__transfer(struct soap*, const char*, int, const struct ns1__transfer *, const char*);
SOAP_FMAC3 struct ns1__transfer * SOAP_FMAC4 soap_in_ns1__transfer(struct soap*, const char*, struct ns1__transfer *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__transfer(struct soap*, const struct ns1__transfer *, const char*, const char*);

#ifndef soap_write_ns1__transfer
#define soap_write_ns1__transfer(soap, data) ( soap_begin(soap), soap_serialize_ns1__transfer(soap, data), soap_begin_send(soap) || soap_put_ns1__transfer(soap, data, "ns1:transfer", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__transfer * SOAP_FMAC4 soap_get_ns1__transfer(struct soap*, struct ns1__transfer *, const char*, const char*);

#ifndef soap_read_ns1__transfer
#define soap_read_ns1__transfer(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__transfer(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__transfer * SOAP_FMAC2 soap_instantiate_ns1__transfer(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__transfer * soap_new_ns1__transfer(struct soap *soap, int n = -1) { return soap_instantiate_ns1__transfer(soap, n, NULL, NULL, NULL); }

inline struct ns1__transfer * soap_new_req_ns1__transfer(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__transfer *_p = soap_instantiate_ns1__transfer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__transfer(soap, _p); _p->param = param; } return _p; }

inline struct ns1__transfer * soap_new_set_ns1__transfer(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__transfer *_p = soap_instantiate_ns1__transfer(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__transfer(soap, _p); _p->param = param; } return _p; }

inline void soap_delete_ns1__transfer(struct soap *soap, struct ns1__transfer *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__transfer(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__transferResponse
#define SOAP_TYPE_ns1__transferResponse (62)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__transferResponse(struct soap*, struct ns1__transferResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__transferResponse(struct soap*, const struct ns1__transferResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__transferResponse(struct soap*, const char*, int, const struct ns1__transferResponse *, const char*);
SOAP_FMAC3 struct ns1__transferResponse * SOAP_FMAC4 soap_in_ns1__transferResponse(struct soap*, const char*, struct ns1__transferResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__transferResponse(struct soap*, const struct ns1__transferResponse *, const char*, const char*);

#ifndef soap_write_ns1__transferResponse
#define soap_write_ns1__transferResponse(soap, data) ( soap_begin(soap), soap_serialize_ns1__transferResponse(soap, data), soap_begin_send(soap) || soap_put_ns1__transferResponse(soap, data, "ns1:transferResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__transferResponse * SOAP_FMAC4 soap_get_ns1__transferResponse(struct soap*, struct ns1__transferResponse *, const char*, const char*);

#ifndef soap_read_ns1__transferResponse
#define soap_read_ns1__transferResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__transferResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__transferResponse * SOAP_FMAC2 soap_instantiate_ns1__transferResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__transferResponse * soap_new_ns1__transferResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__transferResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__transferResponse * soap_new_req_ns1__transferResponse(struct soap *soap, bool ret) { struct ns1__transferResponse *_p = soap_instantiate_ns1__transferResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__transferResponse(soap, _p); _p->ret = ret; } return _p; }

inline struct ns1__transferResponse * soap_new_set_ns1__transferResponse(struct soap *soap, bool ret) { struct ns1__transferResponse *_p = soap_instantiate_ns1__transferResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__transferResponse(soap, _p); _p->ret = ret; } return _p; }

inline void soap_delete_ns1__transferResponse(struct soap *soap, struct ns1__transferResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__transferResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__isPackExist
#define SOAP_TYPE_ns1__isPackExist (60)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__isPackExist(struct soap*, struct ns1__isPackExist *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__isPackExist(struct soap*, const struct ns1__isPackExist *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__isPackExist(struct soap*, const char*, int, const struct ns1__isPackExist *, const char*);
SOAP_FMAC3 struct ns1__isPackExist * SOAP_FMAC4 soap_in_ns1__isPackExist(struct soap*, const char*, struct ns1__isPackExist *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__isPackExist(struct soap*, const struct ns1__isPackExist *, const char*, const char*);

#ifndef soap_write_ns1__isPackExist
#define soap_write_ns1__isPackExist(soap, data) ( soap_begin(soap), soap_serialize_ns1__isPackExist(soap, data), soap_begin_send(soap) || soap_put_ns1__isPackExist(soap, data, "ns1:isPackExist", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__isPackExist * SOAP_FMAC4 soap_get_ns1__isPackExist(struct soap*, struct ns1__isPackExist *, const char*, const char*);

#ifndef soap_read_ns1__isPackExist
#define soap_read_ns1__isPackExist(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__isPackExist(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__isPackExist * SOAP_FMAC2 soap_instantiate_ns1__isPackExist(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__isPackExist * soap_new_ns1__isPackExist(struct soap *soap, int n = -1) { return soap_instantiate_ns1__isPackExist(soap, n, NULL, NULL, NULL); }

inline struct ns1__isPackExist * soap_new_req_ns1__isPackExist(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__isPackExist *_p = soap_instantiate_ns1__isPackExist(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__isPackExist(soap, _p); _p->param = param; } return _p; }

inline struct ns1__isPackExist * soap_new_set_ns1__isPackExist(struct soap *soap, struct ns1__InterfaceParameter& param) { struct ns1__isPackExist *_p = soap_instantiate_ns1__isPackExist(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__isPackExist(soap, _p); _p->param = param; } return _p; }

inline void soap_delete_ns1__isPackExist(struct soap *soap, struct ns1__isPackExist *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__isPackExist(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__isPackExistResponse
#define SOAP_TYPE_ns1__isPackExistResponse (59)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__isPackExistResponse(struct soap*, struct ns1__isPackExistResponse *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__isPackExistResponse(struct soap*, const struct ns1__isPackExistResponse *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__isPackExistResponse(struct soap*, const char*, int, const struct ns1__isPackExistResponse *, const char*);
SOAP_FMAC3 struct ns1__isPackExistResponse * SOAP_FMAC4 soap_in_ns1__isPackExistResponse(struct soap*, const char*, struct ns1__isPackExistResponse *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__isPackExistResponse(struct soap*, const struct ns1__isPackExistResponse *, const char*, const char*);

#ifndef soap_write_ns1__isPackExistResponse
#define soap_write_ns1__isPackExistResponse(soap, data) ( soap_begin(soap), soap_serialize_ns1__isPackExistResponse(soap, data), soap_begin_send(soap) || soap_put_ns1__isPackExistResponse(soap, data, "ns1:isPackExistResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__isPackExistResponse * SOAP_FMAC4 soap_get_ns1__isPackExistResponse(struct soap*, struct ns1__isPackExistResponse *, const char*, const char*);

#ifndef soap_read_ns1__isPackExistResponse
#define soap_read_ns1__isPackExistResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__isPackExistResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__isPackExistResponse * SOAP_FMAC2 soap_instantiate_ns1__isPackExistResponse(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__isPackExistResponse * soap_new_ns1__isPackExistResponse(struct soap *soap, int n = -1) { return soap_instantiate_ns1__isPackExistResponse(soap, n, NULL, NULL, NULL); }

inline struct ns1__isPackExistResponse * soap_new_req_ns1__isPackExistResponse(struct soap *soap, bool ret) { struct ns1__isPackExistResponse *_p = soap_instantiate_ns1__isPackExistResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__isPackExistResponse(soap, _p); _p->ret = ret; } return _p; }

inline struct ns1__isPackExistResponse * soap_new_set_ns1__isPackExistResponse(struct soap *soap, bool ret) { struct ns1__isPackExistResponse *_p = soap_instantiate_ns1__isPackExistResponse(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__isPackExistResponse(soap, _p); _p->ret = ret; } return _p; }

inline void soap_delete_ns1__isPackExistResponse(struct soap *soap, struct ns1__isPackExistResponse *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__isPackExistResponse(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_ns1__InterfaceParameter
#define SOAP_TYPE_ns1__InterfaceParameter (56)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_ns1__InterfaceParameter(struct soap*, struct ns1__InterfaceParameter *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_ns1__InterfaceParameter(struct soap*, const struct ns1__InterfaceParameter *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_ns1__InterfaceParameter(struct soap*, const char*, int, const struct ns1__InterfaceParameter *, const char*);
SOAP_FMAC3 struct ns1__InterfaceParameter * SOAP_FMAC4 soap_in_ns1__InterfaceParameter(struct soap*, const char*, struct ns1__InterfaceParameter *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put_ns1__InterfaceParameter(struct soap*, const struct ns1__InterfaceParameter *, const char*, const char*);

#ifndef soap_write_ns1__InterfaceParameter
#define soap_write_ns1__InterfaceParameter(soap, data) ( soap_begin(soap), soap_serialize_ns1__InterfaceParameter(soap, data), soap_begin_send(soap) || soap_put_ns1__InterfaceParameter(soap, data, "ns1:InterfaceParameter", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct ns1__InterfaceParameter * SOAP_FMAC4 soap_get_ns1__InterfaceParameter(struct soap*, struct ns1__InterfaceParameter *, const char*, const char*);

#ifndef soap_read_ns1__InterfaceParameter
#define soap_read_ns1__InterfaceParameter(soap, data) ( soap_begin_recv(soap) || !soap_get_ns1__InterfaceParameter(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct ns1__InterfaceParameter * SOAP_FMAC2 soap_instantiate_ns1__InterfaceParameter(struct soap*, int, const char*, const char*, size_t*);

inline struct ns1__InterfaceParameter * soap_new_ns1__InterfaceParameter(struct soap *soap, int n = -1) { return soap_instantiate_ns1__InterfaceParameter(soap, n, NULL, NULL, NULL); }

inline struct ns1__InterfaceParameter * soap_new_req_ns1__InterfaceParameter(struct soap *soap, std::string& uuid, std::string& ftpUserName, std::string& ftpIP, std::string& ftpPassWord, std::string& ftpDirName, std::string& torrentP2pPath, std::string& packageName, std::string& packageSize, std::string& taskType, std::string& transferTempPath, std::string& transferStorePath, std::string& transferTorrentPath) { struct ns1__InterfaceParameter *_p = soap_instantiate_ns1__InterfaceParameter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__InterfaceParameter(soap, _p); _p->uuid = uuid; _p->ftpUserName = ftpUserName; _p->ftpIP = ftpIP; _p->ftpPassWord = ftpPassWord; _p->ftpDirName = ftpDirName; _p->torrentP2pPath = torrentP2pPath; _p->packageName = packageName; _p->packageSize = packageSize; _p->taskType = taskType; _p->transferTempPath = transferTempPath; _p->transferStorePath = transferStorePath; _p->transferTorrentPath = transferTorrentPath; } return _p; }

inline struct ns1__InterfaceParameter * soap_new_set_ns1__InterfaceParameter(struct soap *soap, std::string& uuid, std::string& ftpUserName, std::string& ftpIP, std::string& ftpPassWord, std::string& ftpDirName, std::string& torrentP2pPath, std::string& packageName, std::string& packageSize, std::string& taskType, std::string& transferTempPath, std::string& transferStorePath, std::string& transferTorrentPath) { struct ns1__InterfaceParameter *_p = soap_instantiate_ns1__InterfaceParameter(soap, -1, NULL, NULL, NULL); if (_p) { soap_default_ns1__InterfaceParameter(soap, _p); _p->uuid = uuid; _p->ftpUserName = ftpUserName; _p->ftpIP = ftpIP; _p->ftpPassWord = ftpPassWord; _p->ftpDirName = ftpDirName; _p->torrentP2pPath = torrentP2pPath; _p->packageName = packageName; _p->packageSize = packageSize; _p->taskType = taskType; _p->transferTempPath = transferTempPath; _p->transferStorePath = transferStorePath; _p->transferTorrentPath = transferTorrentPath; } return _p; }

inline void soap_delete_ns1__InterfaceParameter(struct soap *soap, struct ns1__InterfaceParameter *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_ns1__InterfaceParameter(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns21__addSendinfo
#define SOAP_TYPE___ns21__addSendinfo (55)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns21__addSendinfo(struct soap*, struct __ns21__addSendinfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns21__addSendinfo(struct soap*, const struct __ns21__addSendinfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns21__addSendinfo(struct soap*, const char*, int, const struct __ns21__addSendinfo *, const char*);
SOAP_FMAC3 struct __ns21__addSendinfo * SOAP_FMAC4 soap_in___ns21__addSendinfo(struct soap*, const char*, struct __ns21__addSendinfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns21__addSendinfo(struct soap*, const struct __ns21__addSendinfo *, const char*, const char*);

#ifndef soap_write___ns21__addSendinfo
#define soap_write___ns21__addSendinfo(soap, data) ( soap_begin(soap), soap_serialize___ns21__addSendinfo(soap, data), soap_begin_send(soap) || soap_put___ns21__addSendinfo(soap, data, "-ns21:addSendinfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns21__addSendinfo * SOAP_FMAC4 soap_get___ns21__addSendinfo(struct soap*, struct __ns21__addSendinfo *, const char*, const char*);

#ifndef soap_read___ns21__addSendinfo
#define soap_read___ns21__addSendinfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns21__addSendinfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns21__addSendinfo * SOAP_FMAC2 soap_instantiate___ns21__addSendinfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns21__addSendinfo * soap_new___ns21__addSendinfo(struct soap *soap, int n = -1) { return soap_instantiate___ns21__addSendinfo(soap, n, NULL, NULL, NULL); }

inline struct __ns21__addSendinfo * soap_new_req___ns21__addSendinfo(struct soap *soap) { struct __ns21__addSendinfo *_p = soap_instantiate___ns21__addSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__addSendinfo(soap, _p); } return _p; }

inline struct __ns21__addSendinfo * soap_new_set___ns21__addSendinfo(struct soap *soap, ns21__addSendinfo *ns21__addSendinfo_) { struct __ns21__addSendinfo *_p = soap_instantiate___ns21__addSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__addSendinfo(soap, _p); _p->ns21__addSendinfo_ = ns21__addSendinfo_; } return _p; }

inline void soap_delete___ns21__addSendinfo(struct soap *soap, struct __ns21__addSendinfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns21__addSendinfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns21__addNode
#define SOAP_TYPE___ns21__addNode (51)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns21__addNode(struct soap*, struct __ns21__addNode *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns21__addNode(struct soap*, const struct __ns21__addNode *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns21__addNode(struct soap*, const char*, int, const struct __ns21__addNode *, const char*);
SOAP_FMAC3 struct __ns21__addNode * SOAP_FMAC4 soap_in___ns21__addNode(struct soap*, const char*, struct __ns21__addNode *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns21__addNode(struct soap*, const struct __ns21__addNode *, const char*, const char*);

#ifndef soap_write___ns21__addNode
#define soap_write___ns21__addNode(soap, data) ( soap_begin(soap), soap_serialize___ns21__addNode(soap, data), soap_begin_send(soap) || soap_put___ns21__addNode(soap, data, "-ns21:addNode", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns21__addNode * SOAP_FMAC4 soap_get___ns21__addNode(struct soap*, struct __ns21__addNode *, const char*, const char*);

#ifndef soap_read___ns21__addNode
#define soap_read___ns21__addNode(soap, data) ( soap_begin_recv(soap) || !soap_get___ns21__addNode(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns21__addNode * SOAP_FMAC2 soap_instantiate___ns21__addNode(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns21__addNode * soap_new___ns21__addNode(struct soap *soap, int n = -1) { return soap_instantiate___ns21__addNode(soap, n, NULL, NULL, NULL); }

inline struct __ns21__addNode * soap_new_req___ns21__addNode(struct soap *soap) { struct __ns21__addNode *_p = soap_instantiate___ns21__addNode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__addNode(soap, _p); } return _p; }

inline struct __ns21__addNode * soap_new_set___ns21__addNode(struct soap *soap, ns21__addNode *ns21__addNode_) { struct __ns21__addNode *_p = soap_instantiate___ns21__addNode(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__addNode(soap, _p); _p->ns21__addNode_ = ns21__addNode_; } return _p; }

inline void soap_delete___ns21__addNode(struct soap *soap, struct __ns21__addNode *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns21__addNode(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns21__dispense
#define SOAP_TYPE___ns21__dispense (47)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns21__dispense(struct soap*, struct __ns21__dispense *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns21__dispense(struct soap*, const struct __ns21__dispense *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns21__dispense(struct soap*, const char*, int, const struct __ns21__dispense *, const char*);
SOAP_FMAC3 struct __ns21__dispense * SOAP_FMAC4 soap_in___ns21__dispense(struct soap*, const char*, struct __ns21__dispense *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns21__dispense(struct soap*, const struct __ns21__dispense *, const char*, const char*);

#ifndef soap_write___ns21__dispense
#define soap_write___ns21__dispense(soap, data) ( soap_begin(soap), soap_serialize___ns21__dispense(soap, data), soap_begin_send(soap) || soap_put___ns21__dispense(soap, data, "-ns21:dispense", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns21__dispense * SOAP_FMAC4 soap_get___ns21__dispense(struct soap*, struct __ns21__dispense *, const char*, const char*);

#ifndef soap_read___ns21__dispense
#define soap_read___ns21__dispense(soap, data) ( soap_begin_recv(soap) || !soap_get___ns21__dispense(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns21__dispense * SOAP_FMAC2 soap_instantiate___ns21__dispense(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns21__dispense * soap_new___ns21__dispense(struct soap *soap, int n = -1) { return soap_instantiate___ns21__dispense(soap, n, NULL, NULL, NULL); }

inline struct __ns21__dispense * soap_new_req___ns21__dispense(struct soap *soap) { struct __ns21__dispense *_p = soap_instantiate___ns21__dispense(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__dispense(soap, _p); } return _p; }

inline struct __ns21__dispense * soap_new_set___ns21__dispense(struct soap *soap, ns21__dispense *ns21__dispense_) { struct __ns21__dispense *_p = soap_instantiate___ns21__dispense(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__dispense(soap, _p); _p->ns21__dispense_ = ns21__dispense_; } return _p; }

inline void soap_delete___ns21__dispense(struct soap *soap, struct __ns21__dispense *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns21__dispense(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns21__getSendinfo
#define SOAP_TYPE___ns21__getSendinfo (43)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns21__getSendinfo(struct soap*, struct __ns21__getSendinfo *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns21__getSendinfo(struct soap*, const struct __ns21__getSendinfo *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns21__getSendinfo(struct soap*, const char*, int, const struct __ns21__getSendinfo *, const char*);
SOAP_FMAC3 struct __ns21__getSendinfo * SOAP_FMAC4 soap_in___ns21__getSendinfo(struct soap*, const char*, struct __ns21__getSendinfo *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns21__getSendinfo(struct soap*, const struct __ns21__getSendinfo *, const char*, const char*);

#ifndef soap_write___ns21__getSendinfo
#define soap_write___ns21__getSendinfo(soap, data) ( soap_begin(soap), soap_serialize___ns21__getSendinfo(soap, data), soap_begin_send(soap) || soap_put___ns21__getSendinfo(soap, data, "-ns21:getSendinfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns21__getSendinfo * SOAP_FMAC4 soap_get___ns21__getSendinfo(struct soap*, struct __ns21__getSendinfo *, const char*, const char*);

#ifndef soap_read___ns21__getSendinfo
#define soap_read___ns21__getSendinfo(soap, data) ( soap_begin_recv(soap) || !soap_get___ns21__getSendinfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns21__getSendinfo * SOAP_FMAC2 soap_instantiate___ns21__getSendinfo(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns21__getSendinfo * soap_new___ns21__getSendinfo(struct soap *soap, int n = -1) { return soap_instantiate___ns21__getSendinfo(soap, n, NULL, NULL, NULL); }

inline struct __ns21__getSendinfo * soap_new_req___ns21__getSendinfo(struct soap *soap) { struct __ns21__getSendinfo *_p = soap_instantiate___ns21__getSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__getSendinfo(soap, _p); } return _p; }

inline struct __ns21__getSendinfo * soap_new_set___ns21__getSendinfo(struct soap *soap, ns21__getSendinfo *ns21__getSendinfo_) { struct __ns21__getSendinfo *_p = soap_instantiate___ns21__getSendinfo(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__getSendinfo(soap, _p); _p->ns21__getSendinfo_ = ns21__getSendinfo_; } return _p; }

inline void soap_delete___ns21__getSendinfo(struct soap *soap, struct __ns21__getSendinfo *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns21__getSendinfo(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns21__TransferResultSecond
#define SOAP_TYPE___ns21__TransferResultSecond (39)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns21__TransferResultSecond(struct soap*, struct __ns21__TransferResultSecond *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns21__TransferResultSecond(struct soap*, const struct __ns21__TransferResultSecond *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns21__TransferResultSecond(struct soap*, const char*, int, const struct __ns21__TransferResultSecond *, const char*);
SOAP_FMAC3 struct __ns21__TransferResultSecond * SOAP_FMAC4 soap_in___ns21__TransferResultSecond(struct soap*, const char*, struct __ns21__TransferResultSecond *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns21__TransferResultSecond(struct soap*, const struct __ns21__TransferResultSecond *, const char*, const char*);

#ifndef soap_write___ns21__TransferResultSecond
#define soap_write___ns21__TransferResultSecond(soap, data) ( soap_begin(soap), soap_serialize___ns21__TransferResultSecond(soap, data), soap_begin_send(soap) || soap_put___ns21__TransferResultSecond(soap, data, "-ns21:TransferResultSecond", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns21__TransferResultSecond * SOAP_FMAC4 soap_get___ns21__TransferResultSecond(struct soap*, struct __ns21__TransferResultSecond *, const char*, const char*);

#ifndef soap_read___ns21__TransferResultSecond
#define soap_read___ns21__TransferResultSecond(soap, data) ( soap_begin_recv(soap) || !soap_get___ns21__TransferResultSecond(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns21__TransferResultSecond * SOAP_FMAC2 soap_instantiate___ns21__TransferResultSecond(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns21__TransferResultSecond * soap_new___ns21__TransferResultSecond(struct soap *soap, int n = -1) { return soap_instantiate___ns21__TransferResultSecond(soap, n, NULL, NULL, NULL); }

inline struct __ns21__TransferResultSecond * soap_new_req___ns21__TransferResultSecond(struct soap *soap) { struct __ns21__TransferResultSecond *_p = soap_instantiate___ns21__TransferResultSecond(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__TransferResultSecond(soap, _p); } return _p; }

inline struct __ns21__TransferResultSecond * soap_new_set___ns21__TransferResultSecond(struct soap *soap, ns21__TransferResultSecond *ns21__TransferResultSecond_) { struct __ns21__TransferResultSecond *_p = soap_instantiate___ns21__TransferResultSecond(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__TransferResultSecond(soap, _p); _p->ns21__TransferResultSecond_ = ns21__TransferResultSecond_; } return _p; }

inline void soap_delete___ns21__TransferResultSecond(struct soap *soap, struct __ns21__TransferResultSecond *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns21__TransferResultSecond(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE___ns21__transferResult
#define SOAP_TYPE___ns21__transferResult (35)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default___ns21__transferResult(struct soap*, struct __ns21__transferResult *);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize___ns21__transferResult(struct soap*, const struct __ns21__transferResult *);
SOAP_FMAC3 int SOAP_FMAC4 soap_out___ns21__transferResult(struct soap*, const char*, int, const struct __ns21__transferResult *, const char*);
SOAP_FMAC3 struct __ns21__transferResult * SOAP_FMAC4 soap_in___ns21__transferResult(struct soap*, const char*, struct __ns21__transferResult *, const char*);

SOAP_FMAC3 int SOAP_FMAC4 soap_put___ns21__transferResult(struct soap*, const struct __ns21__transferResult *, const char*, const char*);

#ifndef soap_write___ns21__transferResult
#define soap_write___ns21__transferResult(soap, data) ( soap_begin(soap), soap_serialize___ns21__transferResult(soap, data), soap_begin_send(soap) || soap_put___ns21__transferResult(soap, data, "-ns21:transferResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct __ns21__transferResult * SOAP_FMAC4 soap_get___ns21__transferResult(struct soap*, struct __ns21__transferResult *, const char*, const char*);

#ifndef soap_read___ns21__transferResult
#define soap_read___ns21__transferResult(soap, data) ( soap_begin_recv(soap) || !soap_get___ns21__transferResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif

SOAP_FMAC1 struct __ns21__transferResult * SOAP_FMAC2 soap_instantiate___ns21__transferResult(struct soap*, int, const char*, const char*, size_t*);

inline struct __ns21__transferResult * soap_new___ns21__transferResult(struct soap *soap, int n = -1) { return soap_instantiate___ns21__transferResult(soap, n, NULL, NULL, NULL); }

inline struct __ns21__transferResult * soap_new_req___ns21__transferResult(struct soap *soap) { struct __ns21__transferResult *_p = soap_instantiate___ns21__transferResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__transferResult(soap, _p); } return _p; }

inline struct __ns21__transferResult * soap_new_set___ns21__transferResult(struct soap *soap, ns21__transferResult *ns21__transferResult_) { struct __ns21__transferResult *_p = soap_instantiate___ns21__transferResult(soap, -1, NULL, NULL, NULL); if (_p) { soap_default___ns21__transferResult(soap, _p); _p->ns21__transferResult_ = ns21__transferResult_; } return _p; }

inline void soap_delete___ns21__transferResult(struct soap *soap, struct __ns21__transferResult *p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy___ns21__transferResult(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (91)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Reason(struct soap*, const char *, int, struct SOAP_ENV__Reason *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Reason(struct soap*, const char*, struct SOAP_ENV__Reason **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Reason
#define soap_write_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Reason(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Reason(soap, data, "SOAP-ENV:Reason", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Reason ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Reason(struct soap*, struct SOAP_ENV__Reason **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Reason
#define soap_read_PointerToSOAP_ENV__Reason(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Reason(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (90)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Detail(struct soap*, const char *, int, struct SOAP_ENV__Detail *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Detail(struct soap*, const char*, struct SOAP_ENV__Detail **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Detail
#define soap_write_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Detail(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Detail(soap, data, "SOAP-ENV:Detail", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Detail ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Detail(struct soap*, struct SOAP_ENV__Detail **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Detail
#define soap_read_PointerToSOAP_ENV__Detail(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Detail(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef WITH_NOGLOBAL

#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (84)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToSOAP_ENV__Code(struct soap*, const char *, int, struct SOAP_ENV__Code *const*, const char *);
SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_in_PointerToSOAP_ENV__Code(struct soap*, const char*, struct SOAP_ENV__Code **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code *const*, const char*, const char*);

#ifndef soap_write_PointerToSOAP_ENV__Code
#define soap_write_PointerToSOAP_ENV__Code(soap, data) ( soap_begin(soap), soap_serialize_PointerToSOAP_ENV__Code(soap, data), soap_begin_send(soap) || soap_put_PointerToSOAP_ENV__Code(soap, data, "SOAP-ENV:Code", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 struct SOAP_ENV__Code ** SOAP_FMAC4 soap_get_PointerToSOAP_ENV__Code(struct soap*, struct SOAP_ENV__Code **, const char*, const char*);

#ifndef soap_read_PointerToSOAP_ENV__Code
#define soap_read_PointerToSOAP_ENV__Code(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToSOAP_ENV__Code(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#endif

#ifndef SOAP_TYPE_PointerTons21__addSendinfoResponse
#define SOAP_TYPE_PointerTons21__addSendinfoResponse (53)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__addSendinfoResponse(struct soap*, ns21__addSendinfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__addSendinfoResponse(struct soap*, const char *, int, ns21__addSendinfoResponse *const*, const char *);
SOAP_FMAC3 ns21__addSendinfoResponse ** SOAP_FMAC4 soap_in_PointerTons21__addSendinfoResponse(struct soap*, const char*, ns21__addSendinfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__addSendinfoResponse(struct soap*, ns21__addSendinfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__addSendinfoResponse
#define soap_write_PointerTons21__addSendinfoResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__addSendinfoResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__addSendinfoResponse(soap, data, "ns21:addSendinfoResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addSendinfoResponse ** SOAP_FMAC4 soap_get_PointerTons21__addSendinfoResponse(struct soap*, ns21__addSendinfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTons21__addSendinfoResponse
#define soap_read_PointerTons21__addSendinfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__addSendinfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__addSendinfo
#define SOAP_TYPE_PointerTons21__addSendinfo (52)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__addSendinfo(struct soap*, ns21__addSendinfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__addSendinfo(struct soap*, const char *, int, ns21__addSendinfo *const*, const char *);
SOAP_FMAC3 ns21__addSendinfo ** SOAP_FMAC4 soap_in_PointerTons21__addSendinfo(struct soap*, const char*, ns21__addSendinfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__addSendinfo(struct soap*, ns21__addSendinfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__addSendinfo
#define soap_write_PointerTons21__addSendinfo(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__addSendinfo(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__addSendinfo(soap, data, "ns21:addSendinfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addSendinfo ** SOAP_FMAC4 soap_get_PointerTons21__addSendinfo(struct soap*, ns21__addSendinfo **, const char*, const char*);

#ifndef soap_read_PointerTons21__addSendinfo
#define soap_read_PointerTons21__addSendinfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__addSendinfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__addNodeResponse
#define SOAP_TYPE_PointerTons21__addNodeResponse (49)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__addNodeResponse(struct soap*, ns21__addNodeResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__addNodeResponse(struct soap*, const char *, int, ns21__addNodeResponse *const*, const char *);
SOAP_FMAC3 ns21__addNodeResponse ** SOAP_FMAC4 soap_in_PointerTons21__addNodeResponse(struct soap*, const char*, ns21__addNodeResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__addNodeResponse(struct soap*, ns21__addNodeResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__addNodeResponse
#define soap_write_PointerTons21__addNodeResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__addNodeResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__addNodeResponse(soap, data, "ns21:addNodeResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addNodeResponse ** SOAP_FMAC4 soap_get_PointerTons21__addNodeResponse(struct soap*, ns21__addNodeResponse **, const char*, const char*);

#ifndef soap_read_PointerTons21__addNodeResponse
#define soap_read_PointerTons21__addNodeResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__addNodeResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__addNode
#define SOAP_TYPE_PointerTons21__addNode (48)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__addNode(struct soap*, ns21__addNode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__addNode(struct soap*, const char *, int, ns21__addNode *const*, const char *);
SOAP_FMAC3 ns21__addNode ** SOAP_FMAC4 soap_in_PointerTons21__addNode(struct soap*, const char*, ns21__addNode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__addNode(struct soap*, ns21__addNode *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__addNode
#define soap_write_PointerTons21__addNode(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__addNode(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__addNode(soap, data, "ns21:addNode", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__addNode ** SOAP_FMAC4 soap_get_PointerTons21__addNode(struct soap*, ns21__addNode **, const char*, const char*);

#ifndef soap_read_PointerTons21__addNode
#define soap_read_PointerTons21__addNode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__addNode(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__dispenseResponse
#define SOAP_TYPE_PointerTons21__dispenseResponse (45)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__dispenseResponse(struct soap*, ns21__dispenseResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__dispenseResponse(struct soap*, const char *, int, ns21__dispenseResponse *const*, const char *);
SOAP_FMAC3 ns21__dispenseResponse ** SOAP_FMAC4 soap_in_PointerTons21__dispenseResponse(struct soap*, const char*, ns21__dispenseResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__dispenseResponse(struct soap*, ns21__dispenseResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__dispenseResponse
#define soap_write_PointerTons21__dispenseResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__dispenseResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__dispenseResponse(soap, data, "ns21:dispenseResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__dispenseResponse ** SOAP_FMAC4 soap_get_PointerTons21__dispenseResponse(struct soap*, ns21__dispenseResponse **, const char*, const char*);

#ifndef soap_read_PointerTons21__dispenseResponse
#define soap_read_PointerTons21__dispenseResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__dispenseResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__dispense
#define SOAP_TYPE_PointerTons21__dispense (44)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__dispense(struct soap*, ns21__dispense *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__dispense(struct soap*, const char *, int, ns21__dispense *const*, const char *);
SOAP_FMAC3 ns21__dispense ** SOAP_FMAC4 soap_in_PointerTons21__dispense(struct soap*, const char*, ns21__dispense **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__dispense(struct soap*, ns21__dispense *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__dispense
#define soap_write_PointerTons21__dispense(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__dispense(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__dispense(soap, data, "ns21:dispense", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__dispense ** SOAP_FMAC4 soap_get_PointerTons21__dispense(struct soap*, ns21__dispense **, const char*, const char*);

#ifndef soap_read_PointerTons21__dispense
#define soap_read_PointerTons21__dispense(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__dispense(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__getSendinfoResponse
#define SOAP_TYPE_PointerTons21__getSendinfoResponse (41)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__getSendinfoResponse(struct soap*, ns21__getSendinfoResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__getSendinfoResponse(struct soap*, const char *, int, ns21__getSendinfoResponse *const*, const char *);
SOAP_FMAC3 ns21__getSendinfoResponse ** SOAP_FMAC4 soap_in_PointerTons21__getSendinfoResponse(struct soap*, const char*, ns21__getSendinfoResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__getSendinfoResponse(struct soap*, ns21__getSendinfoResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__getSendinfoResponse
#define soap_write_PointerTons21__getSendinfoResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__getSendinfoResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__getSendinfoResponse(soap, data, "ns21:getSendinfoResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__getSendinfoResponse ** SOAP_FMAC4 soap_get_PointerTons21__getSendinfoResponse(struct soap*, ns21__getSendinfoResponse **, const char*, const char*);

#ifndef soap_read_PointerTons21__getSendinfoResponse
#define soap_read_PointerTons21__getSendinfoResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__getSendinfoResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__getSendinfo
#define SOAP_TYPE_PointerTons21__getSendinfo (40)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__getSendinfo(struct soap*, ns21__getSendinfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__getSendinfo(struct soap*, const char *, int, ns21__getSendinfo *const*, const char *);
SOAP_FMAC3 ns21__getSendinfo ** SOAP_FMAC4 soap_in_PointerTons21__getSendinfo(struct soap*, const char*, ns21__getSendinfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__getSendinfo(struct soap*, ns21__getSendinfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__getSendinfo
#define soap_write_PointerTons21__getSendinfo(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__getSendinfo(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__getSendinfo(soap, data, "ns21:getSendinfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__getSendinfo ** SOAP_FMAC4 soap_get_PointerTons21__getSendinfo(struct soap*, ns21__getSendinfo **, const char*, const char*);

#ifndef soap_read_PointerTons21__getSendinfo
#define soap_read_PointerTons21__getSendinfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__getSendinfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__TransferResultSecondResponse
#define SOAP_TYPE_PointerTons21__TransferResultSecondResponse (37)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__TransferResultSecondResponse(struct soap*, ns21__TransferResultSecondResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__TransferResultSecondResponse(struct soap*, const char *, int, ns21__TransferResultSecondResponse *const*, const char *);
SOAP_FMAC3 ns21__TransferResultSecondResponse ** SOAP_FMAC4 soap_in_PointerTons21__TransferResultSecondResponse(struct soap*, const char*, ns21__TransferResultSecondResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__TransferResultSecondResponse(struct soap*, ns21__TransferResultSecondResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__TransferResultSecondResponse
#define soap_write_PointerTons21__TransferResultSecondResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__TransferResultSecondResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__TransferResultSecondResponse(soap, data, "ns21:TransferResultSecondResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__TransferResultSecondResponse ** SOAP_FMAC4 soap_get_PointerTons21__TransferResultSecondResponse(struct soap*, ns21__TransferResultSecondResponse **, const char*, const char*);

#ifndef soap_read_PointerTons21__TransferResultSecondResponse
#define soap_read_PointerTons21__TransferResultSecondResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__TransferResultSecondResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__TransferResultSecond
#define SOAP_TYPE_PointerTons21__TransferResultSecond (36)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__TransferResultSecond(struct soap*, ns21__TransferResultSecond *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__TransferResultSecond(struct soap*, const char *, int, ns21__TransferResultSecond *const*, const char *);
SOAP_FMAC3 ns21__TransferResultSecond ** SOAP_FMAC4 soap_in_PointerTons21__TransferResultSecond(struct soap*, const char*, ns21__TransferResultSecond **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__TransferResultSecond(struct soap*, ns21__TransferResultSecond *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__TransferResultSecond
#define soap_write_PointerTons21__TransferResultSecond(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__TransferResultSecond(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__TransferResultSecond(soap, data, "ns21:TransferResultSecond", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__TransferResultSecond ** SOAP_FMAC4 soap_get_PointerTons21__TransferResultSecond(struct soap*, ns21__TransferResultSecond **, const char*, const char*);

#ifndef soap_read_PointerTons21__TransferResultSecond
#define soap_read_PointerTons21__TransferResultSecond(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__TransferResultSecond(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__transferResultResponse
#define SOAP_TYPE_PointerTons21__transferResultResponse (33)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__transferResultResponse(struct soap*, ns21__transferResultResponse *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__transferResultResponse(struct soap*, const char *, int, ns21__transferResultResponse *const*, const char *);
SOAP_FMAC3 ns21__transferResultResponse ** SOAP_FMAC4 soap_in_PointerTons21__transferResultResponse(struct soap*, const char*, ns21__transferResultResponse **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__transferResultResponse(struct soap*, ns21__transferResultResponse *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__transferResultResponse
#define soap_write_PointerTons21__transferResultResponse(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__transferResultResponse(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__transferResultResponse(soap, data, "ns21:transferResultResponse", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__transferResultResponse ** SOAP_FMAC4 soap_get_PointerTons21__transferResultResponse(struct soap*, ns21__transferResultResponse **, const char*, const char*);

#ifndef soap_read_PointerTons21__transferResultResponse
#define soap_read_PointerTons21__transferResultResponse(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__transferResultResponse(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__transferResult
#define SOAP_TYPE_PointerTons21__transferResult (32)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__transferResult(struct soap*, ns21__transferResult *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__transferResult(struct soap*, const char *, int, ns21__transferResult *const*, const char *);
SOAP_FMAC3 ns21__transferResult ** SOAP_FMAC4 soap_in_PointerTons21__transferResult(struct soap*, const char*, ns21__transferResult **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__transferResult(struct soap*, ns21__transferResult *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__transferResult
#define soap_write_PointerTons21__transferResult(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__transferResult(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__transferResult(soap, data, "ns21:transferResult", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__transferResult ** SOAP_FMAC4 soap_get_PointerTons21__transferResult(struct soap*, ns21__transferResult **, const char*, const char*);

#ifndef soap_read_PointerTons21__transferResult
#define soap_read_PointerTons21__transferResult(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__transferResult(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerToint
#define SOAP_TYPE_PointerToint (31)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerToint(struct soap*, int *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerToint(struct soap*, const char *, int, int *const*, const char *);
SOAP_FMAC3 int ** SOAP_FMAC4 soap_in_PointerToint(struct soap*, const char*, int **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerToint(struct soap*, int *const*, const char*, const char*);

#ifndef soap_write_PointerToint
#define soap_write_PointerToint(soap, data) ( soap_begin(soap), soap_serialize_PointerToint(soap, data), soap_begin_send(soap) || soap_put_PointerToint(soap, data, "int", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 int ** SOAP_FMAC4 soap_get_PointerToint(struct soap*, int **, const char*, const char*);

#ifndef soap_read_PointerToint
#define soap_read_PointerToint(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerToint(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__WNode
#define SOAP_TYPE_PointerTons21__WNode (30)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__WNode(struct soap*, ns21__WNode *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__WNode(struct soap*, const char *, int, ns21__WNode *const*, const char *);
SOAP_FMAC3 ns21__WNode ** SOAP_FMAC4 soap_in_PointerTons21__WNode(struct soap*, const char*, ns21__WNode **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__WNode(struct soap*, ns21__WNode *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__WNode
#define soap_write_PointerTons21__WNode(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__WNode(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__WNode(soap, data, "ns21:WNode", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__WNode ** SOAP_FMAC4 soap_get_PointerTons21__WNode(struct soap*, ns21__WNode **, const char*, const char*);

#ifndef soap_read_PointerTons21__WNode
#define soap_read_PointerTons21__WNode(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__WNode(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__PackInfo
#define SOAP_TYPE_PointerTons21__PackInfo (29)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__PackInfo(struct soap*, ns21__PackInfo *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__PackInfo(struct soap*, const char *, int, ns21__PackInfo *const*, const char *);
SOAP_FMAC3 ns21__PackInfo ** SOAP_FMAC4 soap_in_PointerTons21__PackInfo(struct soap*, const char*, ns21__PackInfo **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__PackInfo(struct soap*, ns21__PackInfo *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__PackInfo
#define soap_write_PointerTons21__PackInfo(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__PackInfo(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__PackInfo(soap, data, "ns21:PackInfo", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__PackInfo ** SOAP_FMAC4 soap_get_PointerTons21__PackInfo(struct soap*, ns21__PackInfo **, const char*, const char*);

#ifndef soap_read_PointerTons21__PackInfo
#define soap_read_PointerTons21__PackInfo(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__PackInfo(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTons21__SendinfoTask
#define SOAP_TYPE_PointerTons21__SendinfoTask (27)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTons21__SendinfoTask(struct soap*, ns21__SendinfoTask *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTons21__SendinfoTask(struct soap*, const char *, int, ns21__SendinfoTask *const*, const char *);
SOAP_FMAC3 ns21__SendinfoTask ** SOAP_FMAC4 soap_in_PointerTons21__SendinfoTask(struct soap*, const char*, ns21__SendinfoTask **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTons21__SendinfoTask(struct soap*, ns21__SendinfoTask *const*, const char*, const char*);

#ifndef soap_write_PointerTons21__SendinfoTask
#define soap_write_PointerTons21__SendinfoTask(soap, data) ( soap_begin(soap), soap_serialize_PointerTons21__SendinfoTask(soap, data), soap_begin_send(soap) || soap_put_PointerTons21__SendinfoTask(soap, data, "ns21:SendinfoTask", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 ns21__SendinfoTask ** SOAP_FMAC4 soap_get_PointerTons21__SendinfoTask(struct soap*, ns21__SendinfoTask **, const char*, const char*);

#ifndef soap_read_PointerTons21__SendinfoTask
#define soap_read_PointerTons21__SendinfoTask(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTons21__SendinfoTask(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_PointerTostd__string
#define SOAP_TYPE_PointerTostd__string (25)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_PointerTostd__string(struct soap*, std::string *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_PointerTostd__string(struct soap*, const char *, int, std::string *const*, const char *);
SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_in_PointerTostd__string(struct soap*, const char*, std::string **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_PointerTostd__string(struct soap*, std::string *const*, const char*, const char*);

#ifndef soap_write_PointerTostd__string
#define soap_write_PointerTostd__string(soap, data) ( soap_begin(soap), soap_serialize_PointerTostd__string(soap, data), soap_begin_send(soap) || soap_put_PointerTostd__string(soap, data, "string", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 std::string ** SOAP_FMAC4 soap_get_PointerTostd__string(struct soap*, std::string **, const char*, const char*);

#ifndef soap_read_PointerTostd__string
#define soap_read_PointerTostd__string(soap, data) ( soap_begin_recv(soap) || !soap_get_PointerTostd__string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (5)
#endif

#define soap_default__QName(soap, a) soap_default_string(soap, a)

SOAP_FMAC3 void SOAP_FMAC4 soap_serialize__QName(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out__QName(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in__QName(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put__QName(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write__QName
#define soap_write__QName(soap, data) ( soap_begin(soap), soap_serialize__QName(soap, data), soap_begin_send(soap) || soap_put__QName(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get__QName(struct soap*, char **, const char*, const char*);

#ifndef soap_read__QName
#define soap_read__QName(soap, data) ( soap_begin_recv(soap) || !soap_get__QName(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_string(struct soap*, char **);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_string(struct soap*, char *const*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_string(struct soap*, const char*, int, char*const*, const char*);
SOAP_FMAC3 char * * SOAP_FMAC4 soap_in_string(struct soap*, const char*, char **, const char*);
SOAP_FMAC3 int SOAP_FMAC4 soap_put_string(struct soap*, char *const*, const char*, const char*);

#ifndef soap_write_string
#define soap_write_string(soap, data) ( soap_begin(soap), soap_serialize_string(soap, data), soap_begin_send(soap) || soap_put_string(soap, data, "byte", NULL) || soap_end_send(soap), soap->error )
#endif

SOAP_FMAC3 char ** SOAP_FMAC4 soap_get_string(struct soap*, char **, const char*, const char*);

#ifndef soap_read_string
#define soap_read_string(soap, data) ( soap_begin_recv(soap) || !soap_get_string(soap, data, NULL, NULL) || soap_end_recv(soap), soap->error )
#endif


#ifndef SOAP_TYPE_std__vectorTemplateOfstd__string
#define SOAP_TYPE_std__vectorTemplateOfstd__string (74)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfstd__string(struct soap*, std::vector<std::string >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfstd__string(struct soap*, const std::vector<std::string >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfstd__string(struct soap*, const char*, int, const std::vector<std::string >*, const char*);
SOAP_FMAC3 std::vector<std::string >* SOAP_FMAC4 soap_in_std__vectorTemplateOfstd__string(struct soap*, const char*, std::vector<std::string >*, const char*);
SOAP_FMAC1 std::vector<std::string > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfstd__string(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<std::string > * soap_new_std__vectorTemplateOfstd__string(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfstd__string(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfstd__string(struct soap *soap, std::vector<std::string >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfstd__string(struct soap*, int, int, void*, size_t, const void*, size_t);

#ifndef SOAP_TYPE_std__vectorTemplateOfPointerTons21__SendinfoTask
#define SOAP_TYPE_std__vectorTemplateOfPointerTons21__SendinfoTask (28)
#endif
SOAP_FMAC3 void SOAP_FMAC4 soap_default_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap*, std::vector<ns21__SendinfoTask * >*);
SOAP_FMAC3 void SOAP_FMAC4 soap_serialize_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap*, const std::vector<ns21__SendinfoTask * >*);
SOAP_FMAC3 int SOAP_FMAC4 soap_out_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap*, const char*, int, const std::vector<ns21__SendinfoTask * >*, const char*);
SOAP_FMAC3 std::vector<ns21__SendinfoTask * >* SOAP_FMAC4 soap_in_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap*, const char*, std::vector<ns21__SendinfoTask * >*, const char*);
SOAP_FMAC1 std::vector<ns21__SendinfoTask * > * SOAP_FMAC2 soap_instantiate_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap*, int, const char*, const char*, size_t*);

inline std::vector<ns21__SendinfoTask * > * soap_new_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap *soap, int n = -1) { return soap_instantiate_std__vectorTemplateOfPointerTons21__SendinfoTask(soap, n, NULL, NULL, NULL); }

inline void soap_delete_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap *soap, std::vector<ns21__SendinfoTask * >*p) { soap_delete(soap, p); }

SOAP_FMAC3 void SOAP_FMAC4 soap_copy_std__vectorTemplateOfPointerTons21__SendinfoTask(struct soap*, int, int, void*, size_t, const void*, size_t);

#endif

/* End of soapH.h */
