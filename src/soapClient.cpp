/* soapClient.cpp
   Generated by gSOAP 2.8.14 from soap1.h

Copyright(C) 2000-2013, Robert van Engelen, Genivia Inc. All Rights Reserved.
The generated code is released under ONE of the following licenses:
GPL or Genivia's license for commercial use.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
*/

#if defined(__BORLANDC__)
#pragma option push -w-8060
#pragma option push -w-8004
#endif
#include "soapH.h"

SOAP_SOURCE_STAMP("@(#) soapClient.cpp ver 2.8.14 2016-06-14 07:53:18 GMT")


SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns21__transferResult(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns21__transferResult *ns21__transferResult_, ns21__transferResultResponse *ns21__transferResultResponse_)
{	struct __ns21__transferResult soap_tmp___ns21__transferResult;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.23.158.165:8080/dom/services/domService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns21__transferResult.ns21__transferResult_ = ns21__transferResult_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns21__transferResult(soap, &soap_tmp___ns21__transferResult);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns21__transferResult(soap, &soap_tmp___ns21__transferResult, "-ns21:transferResult", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns21__transferResult(soap, &soap_tmp___ns21__transferResult, "-ns21:transferResult", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns21__transferResultResponse_)
		return soap_closesock(soap);
	ns21__transferResultResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns21__transferResultResponse_->soap_get(soap, "ns21:transferResultResponse", "ns21:transferResultResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns21__TransferResultSecond(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns21__TransferResultSecond *ns21__TransferResultSecond_, ns21__TransferResultSecondResponse *ns21__TransferResultSecondResponse_)
{	struct __ns21__TransferResultSecond soap_tmp___ns21__TransferResultSecond;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.23.158.165:8080/dom/services/domService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns21__TransferResultSecond.ns21__TransferResultSecond_ = ns21__TransferResultSecond_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns21__TransferResultSecond(soap, &soap_tmp___ns21__TransferResultSecond);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns21__TransferResultSecond(soap, &soap_tmp___ns21__TransferResultSecond, "-ns21:TransferResultSecond", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns21__TransferResultSecond(soap, &soap_tmp___ns21__TransferResultSecond, "-ns21:TransferResultSecond", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns21__TransferResultSecondResponse_)
		return soap_closesock(soap);
	ns21__TransferResultSecondResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns21__TransferResultSecondResponse_->soap_get(soap, "ns21:TransferResultSecondResponse", "ns21:TransferResultSecondResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns21__getSendinfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns21__getSendinfo *ns21__getSendinfo_, ns21__getSendinfoResponse *ns21__getSendinfoResponse_)
{	struct __ns21__getSendinfo soap_tmp___ns21__getSendinfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.23.158.165:8080/dom/services/domService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns21__getSendinfo.ns21__getSendinfo_ = ns21__getSendinfo_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns21__getSendinfo(soap, &soap_tmp___ns21__getSendinfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns21__getSendinfo(soap, &soap_tmp___ns21__getSendinfo, "-ns21:getSendinfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns21__getSendinfo(soap, &soap_tmp___ns21__getSendinfo, "-ns21:getSendinfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns21__getSendinfoResponse_)
		return soap_closesock(soap);
	ns21__getSendinfoResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns21__getSendinfoResponse_->soap_get(soap, "ns21:getSendinfoResponse", "ns21:getSendinfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns21__dispense(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns21__dispense *ns21__dispense_, ns21__dispenseResponse *ns21__dispenseResponse_)
{	struct __ns21__dispense soap_tmp___ns21__dispense;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.23.158.165:8080/dom/services/domService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns21__dispense.ns21__dispense_ = ns21__dispense_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns21__dispense(soap, &soap_tmp___ns21__dispense);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns21__dispense(soap, &soap_tmp___ns21__dispense, "-ns21:dispense", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns21__dispense(soap, &soap_tmp___ns21__dispense, "-ns21:dispense", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns21__dispenseResponse_)
		return soap_closesock(soap);
	ns21__dispenseResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns21__dispenseResponse_->soap_get(soap, "ns21:dispenseResponse", "ns21:dispenseResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns21__addNode(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns21__addNode *ns21__addNode_, ns21__addNodeResponse *ns21__addNodeResponse_)
{	struct __ns21__addNode soap_tmp___ns21__addNode;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.23.158.165:8080/dom/services/domService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns21__addNode.ns21__addNode_ = ns21__addNode_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns21__addNode(soap, &soap_tmp___ns21__addNode);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns21__addNode(soap, &soap_tmp___ns21__addNode, "-ns21:addNode", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns21__addNode(soap, &soap_tmp___ns21__addNode, "-ns21:addNode", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns21__addNodeResponse_)
		return soap_closesock(soap);
	ns21__addNodeResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns21__addNodeResponse_->soap_get(soap, "ns21:addNodeResponse", "ns21:addNodeResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call___ns21__addSendinfo(struct soap *soap, const char *soap_endpoint, const char *soap_action, ns21__addSendinfo *ns21__addSendinfo_, ns21__addSendinfoResponse *ns21__addSendinfoResponse_)
{	struct __ns21__addSendinfo soap_tmp___ns21__addSendinfo;
	if (soap_endpoint == NULL)
		soap_endpoint = "http://172.23.158.165:8080/dom/services/domService";
	if (soap_action == NULL)
		soap_action = "";
	soap->encodingStyle = NULL;
	soap_tmp___ns21__addSendinfo.ns21__addSendinfo_ = ns21__addSendinfo_;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize___ns21__addSendinfo(soap, &soap_tmp___ns21__addSendinfo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put___ns21__addSendinfo(soap, &soap_tmp___ns21__addSendinfo, "-ns21:addSendinfo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put___ns21__addSendinfo(soap, &soap_tmp___ns21__addSendinfo, "-ns21:addSendinfo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!ns21__addSendinfoResponse_)
		return soap_closesock(soap);
	ns21__addSendinfoResponse_->soap_default(soap);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	ns21__addSendinfoResponse_->soap_get(soap, "ns21:addSendinfoResponse", "ns21:addSendinfoResponse");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__isPackExist(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__InterfaceParameter param, bool &ret)
{	struct ns1__isPackExist soap_tmp_ns1__isPackExist;
	struct ns1__isPackExistResponse *soap_tmp_ns1__isPackExistResponse;
	soap->encodingStyle = NULL;
	soap_tmp_ns1__isPackExist.param = param;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__isPackExist(soap, &soap_tmp_ns1__isPackExist);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__isPackExist(soap, &soap_tmp_ns1__isPackExist, "ns1:isPackExist", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__isPackExist(soap, &soap_tmp_ns1__isPackExist, "ns1:isPackExist", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ret)
		return soap_closesock(soap);
	soap_default_bool(soap, &ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__isPackExistResponse = soap_get_ns1__isPackExistResponse(soap, NULL, "ns1:isPackExistResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ret = soap_tmp_ns1__isPackExistResponse->ret;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__transfer(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__InterfaceParameter param, bool &ret)
{	struct ns1__transfer soap_tmp_ns1__transfer;
	struct ns1__transferResponse *soap_tmp_ns1__transferResponse;
	soap->encodingStyle = NULL;
	soap_tmp_ns1__transfer.param = param;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__transfer(soap, &soap_tmp_ns1__transfer);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__transfer(soap, &soap_tmp_ns1__transfer, "ns1:transfer", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__transfer(soap, &soap_tmp_ns1__transfer, "ns1:transfer", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ret)
		return soap_closesock(soap);
	soap_default_bool(soap, &ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__transferResponse = soap_get_ns1__transferResponse(soap, NULL, "ns1:transferResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ret = soap_tmp_ns1__transferResponse->ret;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__cutPackage(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__InterfaceParameter param, bool &ret)
{	struct ns1__cutPackage soap_tmp_ns1__cutPackage;
	struct ns1__cutPackageResponse *soap_tmp_ns1__cutPackageResponse;
	soap->encodingStyle = NULL;
	soap_tmp_ns1__cutPackage.param = param;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__cutPackage(soap, &soap_tmp_ns1__cutPackage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__cutPackage(soap, &soap_tmp_ns1__cutPackage, "ns1:cutPackage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__cutPackage(soap, &soap_tmp_ns1__cutPackage, "ns1:cutPackage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ret)
		return soap_closesock(soap);
	soap_default_bool(soap, &ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__cutPackageResponse = soap_get_ns1__cutPackageResponse(soap, NULL, "ns1:cutPackageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ret = soap_tmp_ns1__cutPackageResponse->ret;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getUsableSpace(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__InterfaceParameter param, std::string &ret)
{	struct ns1__getUsableSpace soap_tmp_ns1__getUsableSpace;
	struct ns1__getUsableSpaceResponse *soap_tmp_ns1__getUsableSpaceResponse;
	soap->encodingStyle = NULL;
	soap_tmp_ns1__getUsableSpace.param = param;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__getUsableSpace(soap, &soap_tmp_ns1__getUsableSpace);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getUsableSpace(soap, &soap_tmp_ns1__getUsableSpace, "ns1:getUsableSpace", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getUsableSpace(soap, &soap_tmp_ns1__getUsableSpace, "ns1:getUsableSpace", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ret)
		return soap_closesock(soap);
	soap_default_std__string(soap, &ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__getUsableSpaceResponse = soap_get_ns1__getUsableSpaceResponse(soap, NULL, "ns1:getUsableSpaceResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ret = soap_tmp_ns1__getUsableSpaceResponse->ret;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__deletePackage(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__InterfaceParameter param, bool &ret)
{	struct ns1__deletePackage soap_tmp_ns1__deletePackage;
	struct ns1__deletePackageResponse *soap_tmp_ns1__deletePackageResponse;
	soap->encodingStyle = NULL;
	soap_tmp_ns1__deletePackage.param = param;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__deletePackage(soap, &soap_tmp_ns1__deletePackage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__deletePackage(soap, &soap_tmp_ns1__deletePackage, "ns1:deletePackage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__deletePackage(soap, &soap_tmp_ns1__deletePackage, "ns1:deletePackage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ret)
		return soap_closesock(soap);
	soap_default_bool(soap, &ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__deletePackageResponse = soap_get_ns1__deletePackageResponse(soap, NULL, "ns1:deletePackageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ret = soap_tmp_ns1__deletePackageResponse->ret;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__getTempPackage(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__InterfaceParameter param, std::vector<std::string >&ret)
{	struct ns1__getTempPackage soap_tmp_ns1__getTempPackage;
	struct ns1__getTempPackageResponse *soap_tmp_ns1__getTempPackageResponse;
	soap->encodingStyle = NULL;
	soap_tmp_ns1__getTempPackage.param = param;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__getTempPackage(soap, &soap_tmp_ns1__getTempPackage);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__getTempPackage(soap, &soap_tmp_ns1__getTempPackage, "ns1:getTempPackage", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__getTempPackage(soap, &soap_tmp_ns1__getTempPackage, "ns1:getTempPackage", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ret)
		return soap_closesock(soap);
	soap_default_std__vectorTemplateOfstd__string(soap, &ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__getTempPackageResponse = soap_get_ns1__getTempPackageResponse(soap, NULL, "ns1:getTempPackageResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ret = soap_tmp_ns1__getTempPackageResponse->ret;
	return soap_closesock(soap);
}

SOAP_FMAC5 int SOAP_FMAC6 soap_call_ns1__maketo(struct soap *soap, const char *soap_endpoint, const char *soap_action, struct ns1__InterfaceParameter param, bool &ret)
{	struct ns1__maketo soap_tmp_ns1__maketo;
	struct ns1__maketoResponse *soap_tmp_ns1__maketoResponse;
	soap->encodingStyle = NULL;
	soap_tmp_ns1__maketo.param = param;
	soap_begin(soap);
	soap_serializeheader(soap);
	soap_serialize_ns1__maketo(soap, &soap_tmp_ns1__maketo);
	if (soap_begin_count(soap))
		return soap->error;
	if (soap->mode & SOAP_IO_LENGTH)
	{	if (soap_envelope_begin_out(soap)
		 || soap_putheader(soap)
		 || soap_body_begin_out(soap)
		 || soap_put_ns1__maketo(soap, &soap_tmp_ns1__maketo, "ns1:maketo", NULL)
		 || soap_body_end_out(soap)
		 || soap_envelope_end_out(soap))
			 return soap->error;
	}
	if (soap_end_count(soap))
		return soap->error;
	if (soap_connect(soap, soap_endpoint, soap_action)
	 || soap_envelope_begin_out(soap)
	 || soap_putheader(soap)
	 || soap_body_begin_out(soap)
	 || soap_put_ns1__maketo(soap, &soap_tmp_ns1__maketo, "ns1:maketo", NULL)
	 || soap_body_end_out(soap)
	 || soap_envelope_end_out(soap)
	 || soap_end_send(soap))
		return soap_closesock(soap);
	if (!&ret)
		return soap_closesock(soap);
	soap_default_bool(soap, &ret);
	if (soap_begin_recv(soap)
	 || soap_envelope_begin_in(soap)
	 || soap_recv_header(soap)
	 || soap_body_begin_in(soap))
		return soap_closesock(soap);
	soap_tmp_ns1__maketoResponse = soap_get_ns1__maketoResponse(soap, NULL, "ns1:maketoResponse", "");
	if (soap->error)
		return soap_recv_fault(soap, 0);
	if (soap_body_end_in(soap)
	 || soap_envelope_end_in(soap)
	 || soap_end_recv(soap))
		return soap_closesock(soap);
	ret = soap_tmp_ns1__maketoResponse->ret;
	return soap_closesock(soap);
}

#if defined(__BORLANDC__)
#pragma option pop
#pragma option pop
#endif

/* End of soapClient.cpp */
